{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home \u00b6 Cert Monitor is a CLI tool to discover and monitor X509 Certificates from various sources (TCP, HTTPS, SAML, JWK, Files). It is composed of a monitoring server that will periodically re-discover configured remote sources and expose the corresponding certificate expiration date as prometheus metrics. Additionally, it comes with a built-in CLI that allows to fetch certificates from ad-hoc remote sources and display some information about the certificates (Subject, Issuer, Expiration, PEM output). Features \u00b6 HTTPS and TCP (e.g. LDAPS) certificates discovery Static PEM Certificate discovery SAML Metadata Certificate (IDP and SP SSO descriptor) discovery Scheduler: periodically re-loads HTTPS, TCP, Json Web Keys and SAML Metadata certificates Exposes Certificate Expirations as Prometheus Metrics (Alerting provided by Grafana: dashboards provided in grafana-dashboards/ ) CLI: fetches certificate from remote sources (TCP, HTTPS, SAML, JWK) and display certificate information and PEM output","title":"Home"},{"location":"#home","text":"Cert Monitor is a CLI tool to discover and monitor X509 Certificates from various sources (TCP, HTTPS, SAML, JWK, Files). It is composed of a monitoring server that will periodically re-discover configured remote sources and expose the corresponding certificate expiration date as prometheus metrics. Additionally, it comes with a built-in CLI that allows to fetch certificates from ad-hoc remote sources and display some information about the certificates (Subject, Issuer, Expiration, PEM output).","title":"Home"},{"location":"#features","text":"HTTPS and TCP (e.g. LDAPS) certificates discovery Static PEM Certificate discovery SAML Metadata Certificate (IDP and SP SSO descriptor) discovery Scheduler: periodically re-loads HTTPS, TCP, Json Web Keys and SAML Metadata certificates Exposes Certificate Expirations as Prometheus Metrics (Alerting provided by Grafana: dashboards provided in grafana-dashboards/ ) CLI: fetches certificate from remote sources (TCP, HTTPS, SAML, JWK) and display certificate information and PEM output","title":"Features"},{"location":"changelog/","text":"Changelog \u00b6 Check the generated CHANGELOG.md from the Github repo","title":"Changelog"},{"location":"changelog/#changelog","text":"Check the generated CHANGELOG.md from the Github repo","title":"Changelog"},{"location":"cli/","text":"CLI \u00b6 cert-monitor comes with a rich CLI power by https://github.com/spf13/cobra , and thus comes will built in help and completion. Getting Help \u00b6 Running without argument will display the help page. cert-monitor display A tool to discover, display, and monitor x509 certificates as prometheus metrics Usage: cert-monitor [flags] cert-monitor [command] Available Commands: completion Generate the autocompletion script for the specified shell documentation Generate Markdown doc for cert-monitor fetch fetch certificate from remote sources help Help about any command server Starts the cert-monitor prometheus server version Print the version number of cert-monitor Flags: -d, --debug debug mode enabled -h, --help help for cert-monitor Use \"cert-monitor [command] --help\" for more information about a command. The help subcommand \u00b6 Use help [subcommand] to display help for subcommands cert-monitor help fetch fetch certificate from remote sources Usage: cert-monitor fetch [flags] cert-monitor fetch [command] Available Commands: jwk fetch certificates from remote JWKs endpoint saml fetch certificates from remote SAML metadata tcp fetch certificates from remote tcp endpoint tls fetch certificates from remote TLS url Flags: -h, --help help for fetch -i, --index int Index from certificate list (default -1) --no-color Disable color output --no-text Don't display test (only PEM) --skew int Days to check for expiration (default 90) --skip-tls-validation Skip TLS certificate validation Global Flags: -d, --debug debug mode enabled Use \"cert-monitor fetch [command] --help\" for more information about a command. Completion \u00b6 Follow the instruction generated by the help completion for your corresponding shell: zsh bash Powershell fish cert-monitor help completion zsh Generate the autocompletion script for the zsh shell. If shell completion is not already enabled in your environment you will need to enable it. You can execute the following once: echo \"autoload -U compinit; compinit\" >> ~/.zshrc To load completions for every new session, execute once: #### Linux: cert-monitor completion zsh > \"${fpath[1]}/_cert-monitor\" #### macOS: cert-monitor completion zsh > /usr/local/share/zsh/site-functions/_cert-monitor You will need to start a new shell for this setup to take effect. cert-monitor help completion bash Generate the autocompletion script for the bash shell. This script depends on the 'bash-completion' package. If it is not installed already, you can install it via your OS's package manager. To load completions in your current shell session: source <(cert-monitor completion bash) To load completions for every new session, execute once: #### Linux: cert-monitor completion bash > /etc/bash_completion.d/cert-monitor #### macOS: cert-monitor completion bash > /usr/local/etc/bash_completion.d/cert-monitor You will need to start a new shell for this setup to take effect. cert-monitor help completion powershell Generate the autocompletion script for powershell. To load completions in your current shell session: cert-monitor completion powershell | Out-String | Invoke-Expression To load completions for every new session, add the output of the above command to your powershell profile. cert-monitor help completion fish Generate the autocompletion script for the fish shell. To load completions in your current shell session: cert-monitor completion fish | source To load completions for every new session, execute once: cert-monitor completion fish > ~/.config/fish/completions/cert-monitor.fish You will need to start a new shell for this setup to take effect. CLI Docs \u00b6 You can find the markdown CLI docs on the main github repo .","title":"About"},{"location":"cli/#cli","text":"cert-monitor comes with a rich CLI power by https://github.com/spf13/cobra , and thus comes will built in help and completion.","title":"CLI"},{"location":"cli/#getting-help","text":"Running without argument will display the help page. cert-monitor display A tool to discover, display, and monitor x509 certificates as prometheus metrics Usage: cert-monitor [flags] cert-monitor [command] Available Commands: completion Generate the autocompletion script for the specified shell documentation Generate Markdown doc for cert-monitor fetch fetch certificate from remote sources help Help about any command server Starts the cert-monitor prometheus server version Print the version number of cert-monitor Flags: -d, --debug debug mode enabled -h, --help help for cert-monitor Use \"cert-monitor [command] --help\" for more information about a command.","title":"Getting Help"},{"location":"cli/#the-help-subcommand","text":"Use help [subcommand] to display help for subcommands cert-monitor help fetch fetch certificate from remote sources Usage: cert-monitor fetch [flags] cert-monitor fetch [command] Available Commands: jwk fetch certificates from remote JWKs endpoint saml fetch certificates from remote SAML metadata tcp fetch certificates from remote tcp endpoint tls fetch certificates from remote TLS url Flags: -h, --help help for fetch -i, --index int Index from certificate list (default -1) --no-color Disable color output --no-text Don't display test (only PEM) --skew int Days to check for expiration (default 90) --skip-tls-validation Skip TLS certificate validation Global Flags: -d, --debug debug mode enabled Use \"cert-monitor fetch [command] --help\" for more information about a command.","title":"The help subcommand"},{"location":"cli/#completion","text":"Follow the instruction generated by the help completion for your corresponding shell: zsh bash Powershell fish cert-monitor help completion zsh Generate the autocompletion script for the zsh shell. If shell completion is not already enabled in your environment you will need to enable it. You can execute the following once: echo \"autoload -U compinit; compinit\" >> ~/.zshrc To load completions for every new session, execute once: #### Linux: cert-monitor completion zsh > \"${fpath[1]}/_cert-monitor\" #### macOS: cert-monitor completion zsh > /usr/local/share/zsh/site-functions/_cert-monitor You will need to start a new shell for this setup to take effect. cert-monitor help completion bash Generate the autocompletion script for the bash shell. This script depends on the 'bash-completion' package. If it is not installed already, you can install it via your OS's package manager. To load completions in your current shell session: source <(cert-monitor completion bash) To load completions for every new session, execute once: #### Linux: cert-monitor completion bash > /etc/bash_completion.d/cert-monitor #### macOS: cert-monitor completion bash > /usr/local/etc/bash_completion.d/cert-monitor You will need to start a new shell for this setup to take effect. cert-monitor help completion powershell Generate the autocompletion script for powershell. To load completions in your current shell session: cert-monitor completion powershell | Out-String | Invoke-Expression To load completions for every new session, add the output of the above command to your powershell profile. cert-monitor help completion fish Generate the autocompletion script for the fish shell. To load completions in your current shell session: cert-monitor completion fish | source To load completions for every new session, execute once: cert-monitor completion fish > ~/.config/fish/completions/cert-monitor.fish You will need to start a new shell for this setup to take effect.","title":"Completion"},{"location":"cli/#cli-docs","text":"You can find the markdown CLI docs on the main github repo .","title":"CLI Docs"},{"location":"install/","text":"Install \u00b6 You can find the pre-compiled binaries on the release page releases Getting Latest Version \u00b6 TAG = $( curl https://api.github.com/repos/vdbulcke/cert-monitor/releases/latest | jq .tag_name -r ) VERSION = $( echo $TAG | cut -d 'v' -f 2 ) Info You will need jq and curl in your PATH Warning If you don't have jq you can replace the TAG and VERSION variable manually in the command below MacOS \u00b6 Intel ARM ARM Download the binary from the releases page: curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /cert-monitor_ ${ VERSION } _Darwin_x86_64.tar.gz\" Extract Binary: tar xzf \"cert-monitor_ ${ VERSION } _Darwin_x86_64.tar.gz\" Check Version: ./cert-monitor version Install in your PATH : sudo install cert-monitor /usr/local/bin/ Or sudo mv cert-monitor /usr/local/bin/ Checksum: You can validate the checksum of the downloaded packages by comparing the hash in the checksums.txt that comes with each release, with the computed hash of the downloaded archive: Download checksums.txt : curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /checksums.txt\" Compute Checksum: sha256sum \"cert-monitor_ ${ VERSION } _Darwin_x86_64.tar.gz\" Compare against checksums.txt : grep \"cert-monitor_ ${ VERSION } _Darwin_x86_64.tar.gz\" checksums.txt Download the binary from the releases page: curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /cert-monitor_ ${ VERSION } _Darwin_amr64.tar.gz\" Extract Binary: tar xzf \"cert-monitor_ ${ VERSION } _Darwin_amr64.tar.gz\" Check Version: ./cert-monitor version Install in your PATH : sudo install cert-monitor /usr/local/bin/ Or sudo mv cert-monitor /usr/local/bin/ Checksum: You can validate the checksum of the downloaded packages by comparing the hash in the checksums.txt that comes with each release, with the computed hash of the downloaded archive: Download checksums.txt : curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /checksums.txt\" Compute Checksum: sha256sum \"cert-monitor_ ${ VERSION } _Darwin_amr64.tar.gz\" Compare against checksums.txt : grep \"cert-monitor_ ${ VERSION } _Darwin_amr64.tar.gz\" checksums.txt Download the binary from the releases page: curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /cert-monitor_ ${ VERSION } _Darwin_all.tar.gz\" Extract Binary: tar xzf \"cert-monitor_ ${ VERSION } _Darwin_all.tar.gz\" Check Version: ./cert-monitor version Install in your PATH : sudo install cert-monitor /usr/local/bin/ Or sudo mv cert-monitor /usr/local/bin/ Checksum: You can validate the checksum of the downloaded packages by comparing the hash in the checksums.txt that comes with each release, with the computed hash of the downloaded archive: Download checksums.txt : curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /checksums.txt\" Compute Checksum: sha256sum \"cert-monitor_ ${ VERSION } _Darwin_all.tar.gz\" Compare against checksums.txt : grep \"cert-monitor_ ${ VERSION } _Darwin_all.tar.gz\" checksums.txt Linux \u00b6 Intel ARM Download the binary from the releases page: curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /cert-monitor_ ${ VERSION } _Linux_x86_64.tar.gz\" Extract Binary: tar xzf \"cert-monitor_ ${ VERSION } _Linux_x86_64.tar.gz\" Check Version: ./cert-monitor version Install in your PATH : sudo install cert-monitor /usr/local/bin/ Or sudo mv cert-monitor /usr/local/bin/ Checksum: You can validate the checksum of the downloaded packages by comparing the hash in the checksums.txt that comes with each release, with the computed hash of the downloaded archive: Download checksums.txt : curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /checksums.txt\" Compute Checksum: sha256sum \"cert-monitor_ ${ VERSION } _Linux_x86_64.tar.gz\" Compare against checksums.txt : grep \"cert-monitor_ ${ VERSION } _Linux_x86_64.tar.gz\" checksums.txt Download the binary from the releases page: curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /cert-monitor_ ${ VERSION } _Linux_amr64.tar.gz\" Extract Binary: tar xzf \"cert-monitor_ ${ VERSION } _Linux_amr64.tar.gz\" Check Version: ./cert-monitor version Install in your PATH : sudo install cert-monitor /usr/local/bin/ Or sudo mv cert-monitor /usr/local/bin/ Checksum: You can validate the checksum of the downloaded packages by comparing the hash in the checksums.txt that comes with each release, with the computed hash of the downloaded archive: Download checksums.txt : curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /checksums.txt\" Compute Checksum: sha256sum \"cert-monitor_ ${ VERSION } _Linux_amr64.tar.gz\" Compare against checksums.txt : grep \"cert-monitor_ ${ VERSION } _Linux_amr64.tar.gz\" checksums.txt Windows \u00b6 Intel Download the binary cert-monitor_[VERSION]_Windows_x86_64.zip from the releases page Unzip the Binary Check Version: ./cert-monitor.exe version","title":"Install"},{"location":"install/#install","text":"You can find the pre-compiled binaries on the release page releases","title":"Install"},{"location":"install/#getting-latest-version","text":"TAG = $( curl https://api.github.com/repos/vdbulcke/cert-monitor/releases/latest | jq .tag_name -r ) VERSION = $( echo $TAG | cut -d 'v' -f 2 ) Info You will need jq and curl in your PATH Warning If you don't have jq you can replace the TAG and VERSION variable manually in the command below","title":"Getting Latest Version"},{"location":"install/#macos","text":"Intel ARM ARM Download the binary from the releases page: curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /cert-monitor_ ${ VERSION } _Darwin_x86_64.tar.gz\" Extract Binary: tar xzf \"cert-monitor_ ${ VERSION } _Darwin_x86_64.tar.gz\" Check Version: ./cert-monitor version Install in your PATH : sudo install cert-monitor /usr/local/bin/ Or sudo mv cert-monitor /usr/local/bin/ Checksum: You can validate the checksum of the downloaded packages by comparing the hash in the checksums.txt that comes with each release, with the computed hash of the downloaded archive: Download checksums.txt : curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /checksums.txt\" Compute Checksum: sha256sum \"cert-monitor_ ${ VERSION } _Darwin_x86_64.tar.gz\" Compare against checksums.txt : grep \"cert-monitor_ ${ VERSION } _Darwin_x86_64.tar.gz\" checksums.txt Download the binary from the releases page: curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /cert-monitor_ ${ VERSION } _Darwin_amr64.tar.gz\" Extract Binary: tar xzf \"cert-monitor_ ${ VERSION } _Darwin_amr64.tar.gz\" Check Version: ./cert-monitor version Install in your PATH : sudo install cert-monitor /usr/local/bin/ Or sudo mv cert-monitor /usr/local/bin/ Checksum: You can validate the checksum of the downloaded packages by comparing the hash in the checksums.txt that comes with each release, with the computed hash of the downloaded archive: Download checksums.txt : curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /checksums.txt\" Compute Checksum: sha256sum \"cert-monitor_ ${ VERSION } _Darwin_amr64.tar.gz\" Compare against checksums.txt : grep \"cert-monitor_ ${ VERSION } _Darwin_amr64.tar.gz\" checksums.txt Download the binary from the releases page: curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /cert-monitor_ ${ VERSION } _Darwin_all.tar.gz\" Extract Binary: tar xzf \"cert-monitor_ ${ VERSION } _Darwin_all.tar.gz\" Check Version: ./cert-monitor version Install in your PATH : sudo install cert-monitor /usr/local/bin/ Or sudo mv cert-monitor /usr/local/bin/ Checksum: You can validate the checksum of the downloaded packages by comparing the hash in the checksums.txt that comes with each release, with the computed hash of the downloaded archive: Download checksums.txt : curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /checksums.txt\" Compute Checksum: sha256sum \"cert-monitor_ ${ VERSION } _Darwin_all.tar.gz\" Compare against checksums.txt : grep \"cert-monitor_ ${ VERSION } _Darwin_all.tar.gz\" checksums.txt","title":"MacOS"},{"location":"install/#linux","text":"Intel ARM Download the binary from the releases page: curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /cert-monitor_ ${ VERSION } _Linux_x86_64.tar.gz\" Extract Binary: tar xzf \"cert-monitor_ ${ VERSION } _Linux_x86_64.tar.gz\" Check Version: ./cert-monitor version Install in your PATH : sudo install cert-monitor /usr/local/bin/ Or sudo mv cert-monitor /usr/local/bin/ Checksum: You can validate the checksum of the downloaded packages by comparing the hash in the checksums.txt that comes with each release, with the computed hash of the downloaded archive: Download checksums.txt : curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /checksums.txt\" Compute Checksum: sha256sum \"cert-monitor_ ${ VERSION } _Linux_x86_64.tar.gz\" Compare against checksums.txt : grep \"cert-monitor_ ${ VERSION } _Linux_x86_64.tar.gz\" checksums.txt Download the binary from the releases page: curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /cert-monitor_ ${ VERSION } _Linux_amr64.tar.gz\" Extract Binary: tar xzf \"cert-monitor_ ${ VERSION } _Linux_amr64.tar.gz\" Check Version: ./cert-monitor version Install in your PATH : sudo install cert-monitor /usr/local/bin/ Or sudo mv cert-monitor /usr/local/bin/ Checksum: You can validate the checksum of the downloaded packages by comparing the hash in the checksums.txt that comes with each release, with the computed hash of the downloaded archive: Download checksums.txt : curl -LO \"https://github.com/vdbulcke/cert-monitor/releases/download/ ${ TAG } /checksums.txt\" Compute Checksum: sha256sum \"cert-monitor_ ${ VERSION } _Linux_amr64.tar.gz\" Compare against checksums.txt : grep \"cert-monitor_ ${ VERSION } _Linux_amr64.tar.gz\" checksums.txt","title":"Linux"},{"location":"install/#windows","text":"Intel Download the binary cert-monitor_[VERSION]_Windows_x86_64.zip from the releases page Unzip the Binary Check Version: ./cert-monitor.exe version","title":"Windows"},{"location":"server/","text":"Server \u00b6 Cert Monitor can run in server mode, where it will periodically re-discover the X509 certificates exposed by the configured remote endpoints. The server displays the expiration date of all discovered X509 certificate as Prometheus metrics (see section Prometheus Metrics ). Caution Cert Monitor it-self does not come with alerting capability, but is intended to be integrated with existing OpenSource solution such as Prometheus Alert Manager, Grafana. Running the Server \u00b6 There are two options for running the server: From Binary Docker cert-monitor server --config example/config.yaml docker run -d -p 9000:9000 -v $(pwd)/example/config.yaml:/app/config.yaml:z vdbulcke/cert-monitor:v1.2.1 Configuration \u00b6 See example/config.yaml provided with the Github repo. Server Configuration \u00b6 Listening port \u00b6 Important Mandatory configuration setting ## ## Prometheus ## ### Listening port (Mandatory) prometheus_listening_port : 9000 Logger Config \u00b6 Note Optional configuration setting ## ## Log ## ### Set a log file (default is 'stdout') log_file : /tmp/debug.log ### Set the log format as JSON (default is 'false') log_json_format : true By default logs are written to STDOUT in structured log format. You can change the format to JSON with log_json_format . Additionally, you can have the logs written to a specific log file with log_file . Source: Static Directory \u00b6 Note Optional configuration setting ## ## CertificatesDir ## ### path to a directory that contains from certificates as PEM ### that needs to be monitored ### NOTE: This is only loaded at startup certificate_dir : /path/to/a/dir/containing/pem/certificates With certificate_dir , Cert Monitor server will process files ending in .pem in the directory, and expose the corresponding Prometheus metric certmonitor_certificate_expiration_timestamp_seconds (see Section \"Prometheus Metrics\") with the expiration. Tip It is advised to name the PEM certificates in the certificate dir with sha256 in the file name, so that you can easily find the certificate based on the sha256fingerprint label of the prometheus metric. Source: Remote TLS Endpoint \u00b6 Note Optional configuration setting ## ## Remote TLS endpoint ## ### List of 'RemoteTLSEndpoints' ### ### RemoteTLSEndpoints: ### ## address to query. Format ### ## - https://example.com:8443/some/path ### ## - example.com:8843 ### ## - example.com ### address: (required) ### ## servername for the TLS SNI extension. ### servername: (optional) remote_tls_endpoints : ## use 'servername' to Force the SNI to a specific value - address : \"google.com\" servername : \"google.com\" ## use 'address' for default SNI value - address : \"maps.google.com\" With remote_tls_endpoints you can monitor certificates expose on HTTPS endpoints. The basic configuration is to specify the address to be monitored. The address field support a few formats: URLS: starting with https://[HOST]:[PORT]/[PATH] Address (or IP) & Port: with [HOST]:[PORT] Address (or IP) alone: [HOST] Based on the information provided by the address field, Cert Monitor will reconstruct a URL. Optionally, you can force a specific SNI with servername (see https://www.cloudflare.com/learning/ssl/what-is-sni/ for more info) if you have different certificate chain based on the SNI extension. Caution If you are not using this feature, comment out the whole block including remote_tls_endpoints: , OR set the Remote TLS option to an empty list remote_tls_endpoints: [] Source: Remote TCP Endpoint \u00b6 Note Optional configuration setting ## ## Remote TCP TLS endpoint ## ### List of 'RemoteTLSEndpoints' ### ### RemoteTCPTLSEndpoint: ### ## address or IP to query. Format ### ## - example.com ### address: (required) ### ## port to query. Format Integer ### port: (required) ### ## servername for the TLS SNI extension. ### servername: remote_tcp_tls_endpoints : - address : \"ldap-server.example.com\" port : 3636 servername : \"*.example.com\" With remote_tcp_tls_endpoints you can monitor certificates expose on remote TCP endpoints (endpoint not supporting HTTPS). The basic configuration takes an address (or IP), and a port . Optionally, you can force a specific SNI with servername (see https://www.cloudflare.com/learning/ssl/what-is-sni/ for more info) if you have different certificate chain based on the SNI extension. Caution If you are not using this feature, comment out the whole block including remote_tcp_tls_endpoints: , OR set the Remote TCP option to an empty list remote_tcp_tls_endpoints: [] Source: Remote SAML Metadata Endpoint \u00b6 Note Optional configuration setting ## ## Remote SAML Metadata URL Endpoints ## ## Since Version 0.3.0 ### List of 'RemoteSAMLMetdataEndpoint' ### ### RemoteSAMLMetdataEndpoints: ### ## Url pointing to SAML Metadata ### ## - https://iamapps-public.belgium.be/saml/fas-metadata.xml ### url: (required) remote_saml_metadata_endpoints : - url : \"https://iamapps-public.int.belgium.be/saml/fas-metadata.xml\" With remote_saml_metadata_endpoints you can monitor certificates present in Remote SAML Metadata. The basic configuration takes an url where the XML SAML Metadata is hosted. Caution If you are not using this feature, comment out the whole block including remote_saml_metadata_endpoints: , OR set the Remote SAML Metadata option to an empty list remote_saml_metadata_endpoints: [] Source: Remote JWK Endpoint \u00b6 Note Optional configuration setting ## ## Remote Json Web Keys URL Endpoints ## ## Since Version 1.1.0 ### List of 'RemoteJWKEndpoint' ### ### RemoteJWKEndpoints: ### ## Url pointing to jwk_uri ### ## - https://idp.iamfas.belgium.be/fas/oauth2/connect/jwk_uri ### url: (required) ### ## Filter on 'alg' ### alg: (optional) ### ## Filter on 'kid' ### kid: (optional) ### ## Filter on 'kty' (Key Type) since v 1.3.0 ### kty: (optional) remote_jwk_endpoints : - url : https://idp.iamfas.belgium.be/fas/oauth2/connect/jwk_uri kty : RSA With remote_jwk_endpoints you can monitor certificates present in remote JSON Web Key (in the field x5c ). Important If none of the JSON Web Keys hosted on the Url have the x5c field, no x509 Certificate can be found and thus no expiration metrics will be set. The basic configuration takes an url pointing to a Remote JWK. Optionally, you can specify one or more filters (if more than one key is hosted on the remote JWK endpoint): alg : only process JSON Web Key matching the corresponding algorithm kid : only process JSON Web Key matching the corresponding Key ID kty : only process JSON Web Key matching the corresponding Key Type Caution If you are not using this feature, comment out the whole block including remote_jwk_endpoints: , OR set the Remote JWK option to an empty list remote_jwk_endpoints: [] Scheduler \u00b6 Important This setting is Mandatory if any of the remote_tls_endpoints , remote_tcp_tls_endpoints , remote_saml_metadata_endpoints or remote_jwk_endpoints is configured ## ## Scheduler ## ### period in hours to check the Remote endpoint ### see 'remote_tls_endpoints', 'remote_tcp_tls_endpoints', ### 'remote_saml_metadata_endpoints', and 'remote_jwk_endpoints' schedule_job_hours : 12 With schedule_job_hours Cert Monitor will re-discover certificates hosted on Remote Sources Remote TLS Endpoint Remote TCP Endpoint Remote SAML Metadata Endpoint Remote JWK Endpoint HTTP Client Tunning \u00b6 Note Optional configuration setting ## ## Http Client Option ## ## Since Version v1.2.0 ### ### RemoteEndpointTimeout: (Optional) ### Timeout for waiting for remote endpoints in seconds ### Default: 10 sec remote_endpoint_timeout : 5 ### SkipTLSValidation: (Optional) ### Disable TLS certificate validation ### Default: false ### WARNING: BREAKING CHANGE for tls and tcp this ### was set to 'true' prior to v1.2.0 skip_tls_validation : true With remote_endpoint_timeout you can specify a timeout (in seconds ) to wait for remote endpoints to respond. With skip_tls_validation: true you can disable the validation of TLS certificates on the remote endpoints. Ths Warning If the TLS certificates cannot be verified the remote endpoints will not be processed. Use skip_tls_validation: true if you are monitoring self-signed certificates. Prometheus Metrics \u00b6 All those prometheus metrics exposed the expiration date of the X509 Certificates are static Unix Timestamp in seconds. Those metrics are intended to be used with time() Prometheus method, so as to display the remaining time from current time till certificate expiration. Based on this you can define alerting policy, such that an alert is trigger if a certificate will expire in the next 90 days for example. Example of prometheus query: certmonitor_certificate_expiration_timestamp_seconds - time() Static Certificate Metric \u00b6 certmonitor_certificate_expiration_timestamp_seconds{cert_subj=[Certificate Subject], sha256fingerprint=[Certificate SHA256 Fingerprint]} # HELP certmonitor_certificate_expiration_timestamp_seconds Expiration Date of Certificate as Unix Timestamp in seconds # TYPE certmonitor_certificate_expiration_timestamp_seconds gauge Remote HTTPS and TCP Metric \u00b6 certmonitor_remote_certificate_expiration_timestamp_seconds{cert_subj=[Certificate Subject], sha256fingerprint=[Certificate SHA256 Fingerprint]} # HELP certmonitor_remote_certificate_expiration_timestamp_seconds Expiration Date of Certificate as Unix Timestamp in seconds # TYPE certmonitor_remote_certificate_expiration_timestamp_seconds gauge Remote SAML Metadata Metric \u00b6 certmonitor_remote_saml_metadata_certificate_expiration_timestamp_seconds{cert_subj=[Certificate Subject], sha256fingerprint=[Certificate SHA256 Fingerprint]} # HELP certmonitor_remote_saml_metadata_certificate_expiration_timestamp_seconds Expiration Date of Certificate as Unix Timestamp in seconds # TYPE certmonitor_remote_saml_metadata_certificate_expiration_timestamp_seconds gauge Remote JWK Metric \u00b6 certmonitor_remote_jwk_certificate_expiration_timestamp_seconds{cert_subj=[Certificate Subject], sha256fingerprint=[Certificate SHA256 Fingerprint], alg=[jwk 'alg'], kid=[jwk 'kid']} # HELP certmonitor_remote_jwk_certificate_expiration_timestamp_seconds Expiration Date of Certificate as Unix Timestamp in seconds # TYPE certmonitor_remote_jwk_certificate_expiration_timestamp_seconds gauge Visualization And Alerting \u00b6 Visualization can be done with the combination of Grafana and Prometheus and alerting can be done via those tool (e.g. Grafana alerts, Prometheus Alertmanager). Dashboards \u00b6 Grafana dashboard can be found in grafana-dashboards/ . Using Proxy \u00b6 Proxy Configuration are only supported for remote_tls_endpoints: . Set the standard linux environment variables export http_proxy = 'your-forward-proxy.example.com:3128' export https_proxy = 'your-forward-proxy.example.com:3128' export no_proxy = '.google.com,.example.com'","title":"Server"},{"location":"server/#server","text":"Cert Monitor can run in server mode, where it will periodically re-discover the X509 certificates exposed by the configured remote endpoints. The server displays the expiration date of all discovered X509 certificate as Prometheus metrics (see section Prometheus Metrics ). Caution Cert Monitor it-self does not come with alerting capability, but is intended to be integrated with existing OpenSource solution such as Prometheus Alert Manager, Grafana.","title":"Server"},{"location":"server/#running-the-server","text":"There are two options for running the server: From Binary Docker cert-monitor server --config example/config.yaml docker run -d -p 9000:9000 -v $(pwd)/example/config.yaml:/app/config.yaml:z vdbulcke/cert-monitor:v1.2.1","title":"Running the Server"},{"location":"server/#configuration","text":"See example/config.yaml provided with the Github repo.","title":"Configuration"},{"location":"server/#server-configuration","text":"","title":"Server Configuration"},{"location":"server/#listening-port","text":"Important Mandatory configuration setting ## ## Prometheus ## ### Listening port (Mandatory) prometheus_listening_port : 9000","title":"Listening port"},{"location":"server/#logger-config","text":"Note Optional configuration setting ## ## Log ## ### Set a log file (default is 'stdout') log_file : /tmp/debug.log ### Set the log format as JSON (default is 'false') log_json_format : true By default logs are written to STDOUT in structured log format. You can change the format to JSON with log_json_format . Additionally, you can have the logs written to a specific log file with log_file .","title":"Logger Config"},{"location":"server/#source-static-directory","text":"Note Optional configuration setting ## ## CertificatesDir ## ### path to a directory that contains from certificates as PEM ### that needs to be monitored ### NOTE: This is only loaded at startup certificate_dir : /path/to/a/dir/containing/pem/certificates With certificate_dir , Cert Monitor server will process files ending in .pem in the directory, and expose the corresponding Prometheus metric certmonitor_certificate_expiration_timestamp_seconds (see Section \"Prometheus Metrics\") with the expiration. Tip It is advised to name the PEM certificates in the certificate dir with sha256 in the file name, so that you can easily find the certificate based on the sha256fingerprint label of the prometheus metric.","title":"Source: Static Directory"},{"location":"server/#source-remote-tls-endpoint","text":"Note Optional configuration setting ## ## Remote TLS endpoint ## ### List of 'RemoteTLSEndpoints' ### ### RemoteTLSEndpoints: ### ## address to query. Format ### ## - https://example.com:8443/some/path ### ## - example.com:8843 ### ## - example.com ### address: (required) ### ## servername for the TLS SNI extension. ### servername: (optional) remote_tls_endpoints : ## use 'servername' to Force the SNI to a specific value - address : \"google.com\" servername : \"google.com\" ## use 'address' for default SNI value - address : \"maps.google.com\" With remote_tls_endpoints you can monitor certificates expose on HTTPS endpoints. The basic configuration is to specify the address to be monitored. The address field support a few formats: URLS: starting with https://[HOST]:[PORT]/[PATH] Address (or IP) & Port: with [HOST]:[PORT] Address (or IP) alone: [HOST] Based on the information provided by the address field, Cert Monitor will reconstruct a URL. Optionally, you can force a specific SNI with servername (see https://www.cloudflare.com/learning/ssl/what-is-sni/ for more info) if you have different certificate chain based on the SNI extension. Caution If you are not using this feature, comment out the whole block including remote_tls_endpoints: , OR set the Remote TLS option to an empty list remote_tls_endpoints: []","title":"Source: Remote TLS Endpoint"},{"location":"server/#source-remote-tcp-endpoint","text":"Note Optional configuration setting ## ## Remote TCP TLS endpoint ## ### List of 'RemoteTLSEndpoints' ### ### RemoteTCPTLSEndpoint: ### ## address or IP to query. Format ### ## - example.com ### address: (required) ### ## port to query. Format Integer ### port: (required) ### ## servername for the TLS SNI extension. ### servername: remote_tcp_tls_endpoints : - address : \"ldap-server.example.com\" port : 3636 servername : \"*.example.com\" With remote_tcp_tls_endpoints you can monitor certificates expose on remote TCP endpoints (endpoint not supporting HTTPS). The basic configuration takes an address (or IP), and a port . Optionally, you can force a specific SNI with servername (see https://www.cloudflare.com/learning/ssl/what-is-sni/ for more info) if you have different certificate chain based on the SNI extension. Caution If you are not using this feature, comment out the whole block including remote_tcp_tls_endpoints: , OR set the Remote TCP option to an empty list remote_tcp_tls_endpoints: []","title":"Source: Remote TCP Endpoint"},{"location":"server/#source-remote-saml-metadata-endpoint","text":"Note Optional configuration setting ## ## Remote SAML Metadata URL Endpoints ## ## Since Version 0.3.0 ### List of 'RemoteSAMLMetdataEndpoint' ### ### RemoteSAMLMetdataEndpoints: ### ## Url pointing to SAML Metadata ### ## - https://iamapps-public.belgium.be/saml/fas-metadata.xml ### url: (required) remote_saml_metadata_endpoints : - url : \"https://iamapps-public.int.belgium.be/saml/fas-metadata.xml\" With remote_saml_metadata_endpoints you can monitor certificates present in Remote SAML Metadata. The basic configuration takes an url where the XML SAML Metadata is hosted. Caution If you are not using this feature, comment out the whole block including remote_saml_metadata_endpoints: , OR set the Remote SAML Metadata option to an empty list remote_saml_metadata_endpoints: []","title":"Source: Remote SAML Metadata Endpoint"},{"location":"server/#source-remote-jwk-endpoint","text":"Note Optional configuration setting ## ## Remote Json Web Keys URL Endpoints ## ## Since Version 1.1.0 ### List of 'RemoteJWKEndpoint' ### ### RemoteJWKEndpoints: ### ## Url pointing to jwk_uri ### ## - https://idp.iamfas.belgium.be/fas/oauth2/connect/jwk_uri ### url: (required) ### ## Filter on 'alg' ### alg: (optional) ### ## Filter on 'kid' ### kid: (optional) ### ## Filter on 'kty' (Key Type) since v 1.3.0 ### kty: (optional) remote_jwk_endpoints : - url : https://idp.iamfas.belgium.be/fas/oauth2/connect/jwk_uri kty : RSA With remote_jwk_endpoints you can monitor certificates present in remote JSON Web Key (in the field x5c ). Important If none of the JSON Web Keys hosted on the Url have the x5c field, no x509 Certificate can be found and thus no expiration metrics will be set. The basic configuration takes an url pointing to a Remote JWK. Optionally, you can specify one or more filters (if more than one key is hosted on the remote JWK endpoint): alg : only process JSON Web Key matching the corresponding algorithm kid : only process JSON Web Key matching the corresponding Key ID kty : only process JSON Web Key matching the corresponding Key Type Caution If you are not using this feature, comment out the whole block including remote_jwk_endpoints: , OR set the Remote JWK option to an empty list remote_jwk_endpoints: []","title":"Source: Remote JWK Endpoint"},{"location":"server/#scheduler","text":"Important This setting is Mandatory if any of the remote_tls_endpoints , remote_tcp_tls_endpoints , remote_saml_metadata_endpoints or remote_jwk_endpoints is configured ## ## Scheduler ## ### period in hours to check the Remote endpoint ### see 'remote_tls_endpoints', 'remote_tcp_tls_endpoints', ### 'remote_saml_metadata_endpoints', and 'remote_jwk_endpoints' schedule_job_hours : 12 With schedule_job_hours Cert Monitor will re-discover certificates hosted on Remote Sources Remote TLS Endpoint Remote TCP Endpoint Remote SAML Metadata Endpoint Remote JWK Endpoint","title":"Scheduler"},{"location":"server/#http-client-tunning","text":"Note Optional configuration setting ## ## Http Client Option ## ## Since Version v1.2.0 ### ### RemoteEndpointTimeout: (Optional) ### Timeout for waiting for remote endpoints in seconds ### Default: 10 sec remote_endpoint_timeout : 5 ### SkipTLSValidation: (Optional) ### Disable TLS certificate validation ### Default: false ### WARNING: BREAKING CHANGE for tls and tcp this ### was set to 'true' prior to v1.2.0 skip_tls_validation : true With remote_endpoint_timeout you can specify a timeout (in seconds ) to wait for remote endpoints to respond. With skip_tls_validation: true you can disable the validation of TLS certificates on the remote endpoints. Ths Warning If the TLS certificates cannot be verified the remote endpoints will not be processed. Use skip_tls_validation: true if you are monitoring self-signed certificates.","title":"HTTP Client Tunning"},{"location":"server/#prometheus-metrics","text":"All those prometheus metrics exposed the expiration date of the X509 Certificates are static Unix Timestamp in seconds. Those metrics are intended to be used with time() Prometheus method, so as to display the remaining time from current time till certificate expiration. Based on this you can define alerting policy, such that an alert is trigger if a certificate will expire in the next 90 days for example. Example of prometheus query: certmonitor_certificate_expiration_timestamp_seconds - time()","title":"Prometheus Metrics"},{"location":"server/#static-certificate-metric","text":"certmonitor_certificate_expiration_timestamp_seconds{cert_subj=[Certificate Subject], sha256fingerprint=[Certificate SHA256 Fingerprint]} # HELP certmonitor_certificate_expiration_timestamp_seconds Expiration Date of Certificate as Unix Timestamp in seconds # TYPE certmonitor_certificate_expiration_timestamp_seconds gauge","title":"Static Certificate Metric"},{"location":"server/#remote-https-and-tcp-metric","text":"certmonitor_remote_certificate_expiration_timestamp_seconds{cert_subj=[Certificate Subject], sha256fingerprint=[Certificate SHA256 Fingerprint]} # HELP certmonitor_remote_certificate_expiration_timestamp_seconds Expiration Date of Certificate as Unix Timestamp in seconds # TYPE certmonitor_remote_certificate_expiration_timestamp_seconds gauge","title":"Remote HTTPS and TCP Metric"},{"location":"server/#remote-saml-metadata-metric","text":"certmonitor_remote_saml_metadata_certificate_expiration_timestamp_seconds{cert_subj=[Certificate Subject], sha256fingerprint=[Certificate SHA256 Fingerprint]} # HELP certmonitor_remote_saml_metadata_certificate_expiration_timestamp_seconds Expiration Date of Certificate as Unix Timestamp in seconds # TYPE certmonitor_remote_saml_metadata_certificate_expiration_timestamp_seconds gauge","title":"Remote SAML Metadata Metric"},{"location":"server/#remote-jwk-metric","text":"certmonitor_remote_jwk_certificate_expiration_timestamp_seconds{cert_subj=[Certificate Subject], sha256fingerprint=[Certificate SHA256 Fingerprint], alg=[jwk 'alg'], kid=[jwk 'kid']} # HELP certmonitor_remote_jwk_certificate_expiration_timestamp_seconds Expiration Date of Certificate as Unix Timestamp in seconds # TYPE certmonitor_remote_jwk_certificate_expiration_timestamp_seconds gauge","title":"Remote JWK Metric"},{"location":"server/#visualization-and-alerting","text":"Visualization can be done with the combination of Grafana and Prometheus and alerting can be done via those tool (e.g. Grafana alerts, Prometheus Alertmanager).","title":"Visualization And Alerting"},{"location":"server/#dashboards","text":"Grafana dashboard can be found in grafana-dashboards/ .","title":"Dashboards"},{"location":"server/#using-proxy","text":"Proxy Configuration are only supported for remote_tls_endpoints: . Set the standard linux environment variables export http_proxy = 'your-forward-proxy.example.com:3128' export https_proxy = 'your-forward-proxy.example.com:3128' export no_proxy = '.google.com,.example.com'","title":"Using Proxy"},{"location":"cli/fetch/","text":"Fetch \u00b6 The fetch subcommand is designed to visualize X509 Certificates by making ad-hoc query on remote sources (jwk, saml, tcp, tls). cert-monitor fetch fetch certificate from remote sources Usage: cert-monitor fetch [flags] cert-monitor fetch [command] Available Commands: jwk fetch certificates from remote JWKs endpoint saml fetch certificates from remote SAML metadata tcp fetch certificates from remote tcp endpoint tls fetch certificates from remote TLS url Flags: -h, --help help for fetch -i, --index int Index from certificate list (default -1) --no-color Disable color output --no-text Don't display test (only PEM) --skew int Days to check for expiration (default 90) --skip-tls-validation Skip TLS certificate validation Global Flags: -d, --debug debug mode enabled Use \"cert-monitor fetch [command] --help\" for more information about a command. Common Options \u00b6 --no-color \u00b6 Disable colored output. --index int \u00b6 Remote sources can host multiple certificates (e.g. CAchain + server certificate). The --index (or -i ) can be used to only display the certificate at the specified index in the list of remote certificates. Note Index starts at Zero. Example with HTTPS endpoint: Omitting --index display all certificates from the Remote source (in this example 2 certificates are found) cert-monitor fetch tls --url https://badssl.com 2022-01-16T15:30:42.359+0100 [INFO] cert-monitor: X509 Certificate: index=0 Subject=\"CN=*.badssl.com,O=Lucas Garron Torres,L=Walnut Creek,ST=California,C=US\" 2022-01-16T15:30:42.359+0100 [INFO] cert-monitor: X509 Certificate: index=0 Issuer=\"CN=DigiCert SHA2 Secure Server CA,O=DigiCert Inc,C=US\" 2022-01-16T15:30:42.359+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotBefore=\"2020-03-23 00:00:00 +0000 UTC\" 2022-01-16T15:30:42.359+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotAfter=\"2022-05-17 12:00:00 +0000 UTC\" 2022-01-16T15:30:42.359+0100 [INFO] cert-monitor: X509 Certificate: index=0 -----BEGIN CERTIFICATE----- MIIGqDCCBZCgAwIBAgIQCvBs2jemC2QTQvCh6x1Z/TANBgkqhkiG9w0BAQsFADBN MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMScwJQYDVQQDEx5E aWdpQ2VydCBTSEEyIFNlY3VyZSBTZXJ2ZXIgQ0EwHhcNMjAwMzIzMDAwMDAwWhcN MjIwNTE3MTIwMDAwWjBuMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5p YTEVMBMGA1UEBxMMV2FsbnV0IENyZWVrMRwwGgYDVQQKExNMdWNhcyBHYXJyb24g VG9ycmVzMRUwEwYDVQQDDAwqLmJhZHNzbC5jb20wggEiMA0GCSqGSIb3DQEBAQUA A4IBDwAwggEKAoIBAQDCBOz4jO4EwrPYUNVwWMyTGOtcqGhJsCK1+ZWesSssdj5s wEtgTEzqsrTAD4C2sPlyyYYC+VxBXRMrf3HES7zplC5QN6ZnHGGM9kFCxUbTFocn n3TrCp0RUiYhc2yETHlV5NFr6AY9SBVSrbMo26r/bv9glUp3aznxJNExtt1NwMT8 U7ltQq21fP6u9RXSM0jnInHHwhR6bCjqN0rf6my1crR+WqIW3GmxV0TbChKr3sMP R3RcQSLhmvkbk+atIgYpLrG6SRwMJ56j+4v3QHIArJII2YxXhFOBBcvm/mtUmEAn hccQu3Nw72kYQQdFVXz5ZD89LMOpfOuTGkyG0cqFAgMBAAGjggNhMIIDXTAfBgNV HSMEGDAWgBQPgGEcgjFh1S8o541GOLQs4cbZ4jAdBgNVHQ4EFgQUne7Be4ELOkdp cRh9ETeTvKUbP/swIwYDVR0RBBwwGoIMKi5iYWRzc2wuY29tggpiYWRzc2wuY29t MA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIw awYDVR0fBGQwYjAvoC2gK4YpaHR0cDovL2NybDMuZGlnaWNlcnQuY29tL3NzY2Et c2hhMi1nNi5jcmwwL6AtoCuGKWh0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9zc2Nh LXNoYTItZzYuY3JsMEwGA1UdIARFMEMwNwYJYIZIAYb9bAEBMCowKAYIKwYBBQUH AgEWHGh0dHBzOi8vd3d3LmRpZ2ljZXJ0LmNvbS9DUFMwCAYGZ4EMAQIDMHwGCCsG AQUFBwEBBHAwbjAkBggrBgEFBQcwAYYYaHR0cDovL29jc3AuZGlnaWNlcnQuY29t MEYGCCsGAQUFBzAChjpodHRwOi8vY2FjZXJ0cy5kaWdpY2VydC5jb20vRGlnaUNl cnRTSEEyU2VjdXJlU2VydmVyQ0EuY3J0MAwGA1UdEwEB/wQCMAAwggF+BgorBgEE AdZ5AgQCBIIBbgSCAWoBaAB2ALvZ37wfinG1k5Qjl6qSe0c4V5UKq1LoGpCWZDaO HtGFAAABcQhGXioAAAQDAEcwRQIgDfWVBXEuUZC2YP4Si3AQDidHC4U9e5XTGyG7 SFNDlRkCIQCzikrA1nf7boAdhvaGu2Vkct3VaI+0y8p3gmonU5d9DwB2ACJFRQdZ VSRWlj+hL/H3bYbgIyZjrcBLf13Gg1xu4g8CAAABcQhGXlsAAAQDAEcwRQIhAMWi Vsi2vYdxRCRsu/DMmCyhY0iJPKHE2c6ejPycIbgqAiAs3kSSS0NiUFiHBw7QaQ/s GO+/lNYvjExlzVUWJbgNLwB2AFGjsPX9AXmcVm24N3iPDKR6zBsny/eeiEKaDf7U iwXlAAABcQhGXnoAAAQDAEcwRQIgKsntiBqt8Au8DAABFkxISELhP3U/wb5lb76p vfenWL0CIQDr2kLhCWP/QUNxXqGmvr1GaG9EuokTOLEnGPhGv1cMkDANBgkqhkiG 9w0BAQsFAAOCAQEA0RGxlwy3Tl0lhrUAn2mIi8LcZ9nBUyfAcCXCtYyCdEbjIP64 xgX6pzTt0WJoxzlT+MiK6fc0hECZXqpkTNVTARYtGkJoljlTK2vAdHZ0SOpm9OT4 RLfjGnImY0hiFbZ/LtsvS2Zg7cVJecqnrZe/za/nbDdljnnrll7C8O5naQuKr4te uice3e8a4TtviFwS/wdDnJ3RrE83b1IljILbU5SV0X1NajyYkUWS7AnOmrFUUByz MwdGrM6kt0lfJy/gvGVsgIKZocHdedPeECqAtq7FAJYanOsjNN9RbBOGhbwq0/FP CC01zojqS10nGowxzOiqyB4m6wytmzf0QwjpMw== -----END CERTIFICATE----- 2022-01-16T15:30:42.360+0100 [INFO] cert-monitor: X509 Certificate: index=1 Subject=\"CN=DigiCert SHA2 Secure Server CA,O=DigiCert Inc,C=US\" 2022-01-16T15:30:42.360+0100 [INFO] cert-monitor: X509 Certificate: index=1 Issuer=\"CN=DigiCert Global Root CA,OU=www.digicert.com,O=DigiCert Inc,C=US\" 2022-01-16T15:30:42.360+0100 [INFO] cert-monitor: X509 Certificate: index=1 NotBefore=\"2013-03-08 12:00:00 +0000 UTC\" 2022-01-16T15:30:42.360+0100 [INFO] cert-monitor: X509 Certificate: index=1 NotAfter=\"2023-03-08 12:00:00 +0000 UTC\" 2022-01-16T15:30:42.360+0100 [INFO] cert-monitor: X509 Certificate: index=1 -----BEGIN CERTIFICATE----- MIIElDCCA3ygAwIBAgIQAf2j627KdciIQ4tyS8+8kTANBgkqhkiG9w0BAQsFADBh MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3 d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD QTAeFw0xMzAzMDgxMjAwMDBaFw0yMzAzMDgxMjAwMDBaME0xCzAJBgNVBAYTAlVT MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxJzAlBgNVBAMTHkRpZ2lDZXJ0IFNIQTIg U2VjdXJlIFNlcnZlciBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB ANyuWJBNwcQwFZA1W248ghX1LFy949v/cUP6ZCWA1O4Yok3wZtAKc24RmDYXZK83 nf36QYSvx6+M/hpzTc8zl5CilodTgyu5pnVILR1WN3vaMTIa16yrBvSqXUu3R0bd KpPDkC55gIDvEwRqFDu1m5K+wgdlTvza/P96rtxcflUxDOg5B6TXvi/TC2rSsd9f /ld0Uzs1gN2ujkSYs58O09rg1/RrKatEp0tYhG2SS4HD2nOLEpdIkARFdRrdNzGX kujNVA075ME/OV4uuPNcfhCOhkEAjUVmR7ChZc6gqikJTvOX6+guqw9ypzAO+sf0 /RR3w6RbKFfCs/mC/bdFWJsCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8C AQAwDgYDVR0PAQH/BAQDAgGGMDQGCCsGAQUFBwEBBCgwJjAkBggrBgEFBQcwAYYY aHR0cDovL29jc3AuZGlnaWNlcnQuY29tMHsGA1UdHwR0MHIwN6A1oDOGMWh0dHA6 Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEdsb2JhbFJvb3RDQS5jcmwwN6A1 oDOGMWh0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEdsb2JhbFJvb3RD QS5jcmwwPQYDVR0gBDYwNDAyBgRVHSAAMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8v d3d3LmRpZ2ljZXJ0LmNvbS9DUFMwHQYDVR0OBBYEFA+AYRyCMWHVLyjnjUY4tCzh xtniMB8GA1UdIwQYMBaAFAPeUDVW0Uy7ZvCj4hsbw5eyPdFVMA0GCSqGSIb3DQEB CwUAA4IBAQAjPt9L0jFCpbZ+QlwaRMxp0Wi0XUvgBCFsS+JtzLHgl4+mUwnNqipl 5TlPHoOlblyYoiQm5vuh7ZPHLgLGTUq/sELfeNqzqPlt/yGFUzZgTHbO7Djc1lGA 8MXW5dRNJ2Srm8c+cftIl7gzbckTB+6WohsYFfZcTEDts8Ls/3HB40f/1LkAtDdC 2iDJ6m6K7hQGrn2iWZiIqBtvLfTyyRRfJs8sjX7tN8Cp1Tm5gr8ZDOo0rwAhaPit c+LJMto4JQtV05od8GiG7S5BNO98pVAdvzr508EIDObtHopYJeS4d60tbvVS3bR0 j6tJLp07kzQoH3jOlOrHvdPJbRzeXDLz -----END CERTIFICATE----- Use --index 1 to only display the second certificate cert-monitor fetch tls --url https://badssl.com --index 1 2022-01-16T15:34:53.294+0100 [INFO] cert-monitor: X509 Certificate: index=1 Subject=\"CN=DigiCert SHA2 Secure Server CA,O=DigiCert Inc,C=US\" 2022-01-16T15:34:53.295+0100 [INFO] cert-monitor: X509 Certificate: index=1 Issuer=\"CN=DigiCert Global Root CA,OU=www.digicert.com,O=DigiCert Inc,C=US\" 2022-01-16T15:34:53.295+0100 [INFO] cert-monitor: X509 Certificate: index=1 NotBefore=\"2013-03-08 12:00:00 +0000 UTC\" 2022-01-16T15:34:53.295+0100 [INFO] cert-monitor: X509 Certificate: index=1 NotAfter=\"2023-03-08 12:00:00 +0000 UTC\" 2022-01-16T15:34:53.295+0100 [INFO] cert-monitor: X509 Certificate: index=1 -----BEGIN CERTIFICATE----- MIIElDCCA3ygAwIBAgIQAf2j627KdciIQ4tyS8+8kTANBgkqhkiG9w0BAQsFADBh MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3 d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD QTAeFw0xMzAzMDgxMjAwMDBaFw0yMzAzMDgxMjAwMDBaME0xCzAJBgNVBAYTAlVT MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxJzAlBgNVBAMTHkRpZ2lDZXJ0IFNIQTIg U2VjdXJlIFNlcnZlciBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB ANyuWJBNwcQwFZA1W248ghX1LFy949v/cUP6ZCWA1O4Yok3wZtAKc24RmDYXZK83 nf36QYSvx6+M/hpzTc8zl5CilodTgyu5pnVILR1WN3vaMTIa16yrBvSqXUu3R0bd KpPDkC55gIDvEwRqFDu1m5K+wgdlTvza/P96rtxcflUxDOg5B6TXvi/TC2rSsd9f /ld0Uzs1gN2ujkSYs58O09rg1/RrKatEp0tYhG2SS4HD2nOLEpdIkARFdRrdNzGX kujNVA075ME/OV4uuPNcfhCOhkEAjUVmR7ChZc6gqikJTvOX6+guqw9ypzAO+sf0 /RR3w6RbKFfCs/mC/bdFWJsCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8C AQAwDgYDVR0PAQH/BAQDAgGGMDQGCCsGAQUFBwEBBCgwJjAkBggrBgEFBQcwAYYY aHR0cDovL29jc3AuZGlnaWNlcnQuY29tMHsGA1UdHwR0MHIwN6A1oDOGMWh0dHA6 Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEdsb2JhbFJvb3RDQS5jcmwwN6A1 oDOGMWh0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEdsb2JhbFJvb3RD QS5jcmwwPQYDVR0gBDYwNDAyBgRVHSAAMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8v d3d3LmRpZ2ljZXJ0LmNvbS9DUFMwHQYDVR0OBBYEFA+AYRyCMWHVLyjnjUY4tCzh xtniMB8GA1UdIwQYMBaAFAPeUDVW0Uy7ZvCj4hsbw5eyPdFVMA0GCSqGSIb3DQEB CwUAA4IBAQAjPt9L0jFCpbZ+QlwaRMxp0Wi0XUvgBCFsS+JtzLHgl4+mUwnNqipl 5TlPHoOlblyYoiQm5vuh7ZPHLgLGTUq/sELfeNqzqPlt/yGFUzZgTHbO7Djc1lGA 8MXW5dRNJ2Srm8c+cftIl7gzbckTB+6WohsYFfZcTEDts8Ls/3HB40f/1LkAtDdC 2iDJ6m6K7hQGrn2iWZiIqBtvLfTyyRRfJs8sjX7tN8Cp1Tm5gr8ZDOo0rwAhaPit c+LJMto4JQtV05od8GiG7S5BNO98pVAdvzr508EIDObtHopYJeS4d60tbvVS3bR0 j6tJLp07kzQoH3jOlOrHvdPJbRzeXDLz -----END CERTIFICATE----- --skew int \u00b6 A warning message will be displayed if a given X509 Certificates is expired or will expire with the next skew number of days. By default the skew is set to 90 days, but you can override this using --skew flag. For example: with default skew (90 days): cert-monitor fetch tls --url https://google.com --index 2 2022-01-16T15:44:38.801+0100 [INFO] cert-monitor: X509 Certificate: index=2 Subject=\"CN=GTS Root R1,O=Google Trust Services LLC,C=US\" 2022-01-16T15:44:38.801+0100 [INFO] cert-monitor: X509 Certificate: index=2 Issuer=\"CN=GlobalSign Root CA,OU=Root CA,O=GlobalSign nv-sa,C=BE\" 2022-01-16T15:44:38.801+0100 [INFO] cert-monitor: X509 Certificate: index=2 NotBefore=\"2020-06-19 00:00:42 +0000 UTC\" 2022-01-16T15:44:38.801+0100 [INFO] cert-monitor: X509 Certificate: index=2 NotAfter=\"2028-01-28 00:00:42 +0000 UTC\" 2022-01-16T15:44:38.801+0100 [INFO] cert-monitor: X509 Certificate: index=2 -----BEGIN CERTIFICATE----- MIIFYjCCBEqgAwIBAgIQd70NbNs2+RrqIQ/E8FjTDTANBgkqhkiG9w0BAQsFADBX MQswCQYDVQQGEwJCRTEZMBcGA1UEChMQR2xvYmFsU2lnbiBudi1zYTEQMA4GA1UE CxMHUm9vdCBDQTEbMBkGA1UEAxMSR2xvYmFsU2lnbiBSb290IENBMB4XDTIwMDYx OTAwMDA0MloXDTI4MDEyODAwMDA0MlowRzELMAkGA1UEBhMCVVMxIjAgBgNVBAoT GUdvb2dsZSBUcnVzdCBTZXJ2aWNlcyBMTEMxFDASBgNVBAMTC0dUUyBSb290IFIx MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAthECix7joXebO9y/lD63 ladAPKH9gvl9MgaCcfb2jH/76Nu8ai6Xl6OMS/kr9rH5zoQdsfnFl97vufKj6bwS iV6nqlKr+CMny6SxnGPb15l+8Ape62im9MZaRw1NEDPjTrETo8gYbEvs/AmQ351k KSUjB6G00j0uYODP0gmHu81I8E3CwnqIiru6z1kZ1q+PsAewnjHxgsHA3y6mbWwZ DrXYfiYaRQM9sHmklCitD38m5agI/pboPGiUU+6DOogrFZYJsuB6jC511pzrp1Zk j5ZPaK49l8KEj8C8QMALXL32h7M1bKwYUH+E4EzNktMg6TO8UpmvMrUpsyUqtEj5 cuHKZPfmghCN6J3Cioj6OGaK/GP5Afl4/Xtcd/p2h/rs37EOeZVXtL0m79YB0esW CruOC7XFxYpVq9Os6pFLKcwZpDIlTirxZUTQAs6qzkm06p98g7BAe+dDq6dso499 iYH6TKX/1Y7DzkvgtdizjkXPdsDtQCv9Uw+wp9U7DbGKogPeMa3Md+pvez7W35Ei Eua++tgy/BBjFFFy3l3WFpO9KWgz7zpm7AeKJt8T11dleCfeXkkUAKIAf5qoIbap sZWwpbkNFhHax2xIPEDgfg1azVY80ZcFuctL7TlLnMQ/0lUTbiSw1nH69MG6zO0b 9f6BQdgAmD06yK56mDcYBZUCAwEAAaOCATgwggE0MA4GA1UdDwEB/wQEAwIBhjAP BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTkrysmcRorSCeFL1JmLO/wiRNxPjAf BgNVHSMEGDAWgBRge2YaRQ2XyolQL30EzTSo//z9SzBgBggrBgEFBQcBAQRUMFIw JQYIKwYBBQUHMAGGGWh0dHA6Ly9vY3NwLnBraS5nb29nL2dzcjEwKQYIKwYBBQUH MAKGHWh0dHA6Ly9wa2kuZ29vZy9nc3IxL2dzcjEuY3J0MDIGA1UdHwQrMCkwJ6Al oCOGIWh0dHA6Ly9jcmwucGtpLmdvb2cvZ3NyMS9nc3IxLmNybDA7BgNVHSAENDAy MAgGBmeBDAECATAIBgZngQwBAgIwDQYLKwYBBAHWeQIFAwIwDQYLKwYBBAHWeQIF AwMwDQYJKoZIhvcNAQELBQADggEBADSkHrEoo9C0dhemMXoh6dFSPsjbdBZBiLg9 NR3t5P+T4Vxfq7vqfM/b5A3Ri1fyJm9bvhdGaJQ3b2t6yMAYN/olUazsaL+yyEn9 WprKASOshIArAoyZl+tJaox118fessmXn1hIVw41oeQa1v1vg4Fv74zPl6/AhSrw 9U5pCZEt4Wi4wStz6dTZ/CLANx8LZh1J7QJVj2fhMtfTJr9w4z30Z209fOU0iOMy +qduBmpvvYuR7hZL6Dupszfnw0Skfths18dG9ZKb59UhvmaSGZRVbNQpsg3BZlvi d0lIKO2d1xozclOzgjXPYovJJIultzkMu34qQb9Sz/yilrbCgj8= -----END CERTIFICATE----- with a --skew 10000 (10 000 days): cert-monitor fetch tls --url https://google.com --index 2 --skew 10000 2022-01-16T15:45:41.801+0100 [INFO] cert-monitor: X509 Certificate: index=2 Subject=\"CN=GTS Root R1,O=Google Trust Services LLC,C=US\" 2022-01-16T15:45:41.802+0100 [INFO] cert-monitor: X509 Certificate: index=2 Issuer=\"CN=GlobalSign Root CA,OU=Root CA,O=GlobalSign nv-sa,C=BE\" 2022-01-16T15:45:41.802+0100 [INFO] cert-monitor: X509 Certificate: index=2 NotBefore=\"2020-06-19 00:00:42 +0000 UTC\" 2022-01-16T15:45:41.802+0100 [INFO] cert-monitor: X509 Certificate: index=2 NotAfter=\"2028-01-28 00:00:42 +0000 UTC\" 2022-01-16T15:45:41.802+0100 [WARN] cert-monitor: Certifcate Expired: subject=\"CN=GTS Root R1,O=Google Trust Services LLC,C=US\" Skew Date=\"2049-06-03 16:45:41.802034899 +0200 CEST m=+864000000.093509265\" NotAfter=\"2028-01-28 00:00:42 +0000 UTC\" Skew Days=10000 2022-01-16T15:45:41.802+0100 [INFO] cert-monitor: X509 Certificate: index=2 -----BEGIN CERTIFICATE----- MIIFYjCCBEqgAwIBAgIQd70NbNs2+RrqIQ/E8FjTDTANBgkqhkiG9w0BAQsFADBX MQswCQYDVQQGEwJCRTEZMBcGA1UEChMQR2xvYmFsU2lnbiBudi1zYTEQMA4GA1UE CxMHUm9vdCBDQTEbMBkGA1UEAxMSR2xvYmFsU2lnbiBSb290IENBMB4XDTIwMDYx OTAwMDA0MloXDTI4MDEyODAwMDA0MlowRzELMAkGA1UEBhMCVVMxIjAgBgNVBAoT GUdvb2dsZSBUcnVzdCBTZXJ2aWNlcyBMTEMxFDASBgNVBAMTC0dUUyBSb290IFIx MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAthECix7joXebO9y/lD63 ladAPKH9gvl9MgaCcfb2jH/76Nu8ai6Xl6OMS/kr9rH5zoQdsfnFl97vufKj6bwS iV6nqlKr+CMny6SxnGPb15l+8Ape62im9MZaRw1NEDPjTrETo8gYbEvs/AmQ351k KSUjB6G00j0uYODP0gmHu81I8E3CwnqIiru6z1kZ1q+PsAewnjHxgsHA3y6mbWwZ DrXYfiYaRQM9sHmklCitD38m5agI/pboPGiUU+6DOogrFZYJsuB6jC511pzrp1Zk j5ZPaK49l8KEj8C8QMALXL32h7M1bKwYUH+E4EzNktMg6TO8UpmvMrUpsyUqtEj5 cuHKZPfmghCN6J3Cioj6OGaK/GP5Afl4/Xtcd/p2h/rs37EOeZVXtL0m79YB0esW CruOC7XFxYpVq9Os6pFLKcwZpDIlTirxZUTQAs6qzkm06p98g7BAe+dDq6dso499 iYH6TKX/1Y7DzkvgtdizjkXPdsDtQCv9Uw+wp9U7DbGKogPeMa3Md+pvez7W35Ei Eua++tgy/BBjFFFy3l3WFpO9KWgz7zpm7AeKJt8T11dleCfeXkkUAKIAf5qoIbap sZWwpbkNFhHax2xIPEDgfg1azVY80ZcFuctL7TlLnMQ/0lUTbiSw1nH69MG6zO0b 9f6BQdgAmD06yK56mDcYBZUCAwEAAaOCATgwggE0MA4GA1UdDwEB/wQEAwIBhjAP BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTkrysmcRorSCeFL1JmLO/wiRNxPjAf BgNVHSMEGDAWgBRge2YaRQ2XyolQL30EzTSo//z9SzBgBggrBgEFBQcBAQRUMFIw JQYIKwYBBQUHMAGGGWh0dHA6Ly9vY3NwLnBraS5nb29nL2dzcjEwKQYIKwYBBQUH MAKGHWh0dHA6Ly9wa2kuZ29vZy9nc3IxL2dzcjEuY3J0MDIGA1UdHwQrMCkwJ6Al oCOGIWh0dHA6Ly9jcmwucGtpLmdvb2cvZ3NyMS9nc3IxLmNybDA7BgNVHSAENDAy MAgGBmeBDAECATAIBgZngQwBAgIwDQYLKwYBBAHWeQIFAwIwDQYLKwYBBAHWeQIF AwMwDQYJKoZIhvcNAQELBQADggEBADSkHrEoo9C0dhemMXoh6dFSPsjbdBZBiLg9 NR3t5P+T4Vxfq7vqfM/b5A3Ri1fyJm9bvhdGaJQ3b2t6yMAYN/olUazsaL+yyEn9 WprKASOshIArAoyZl+tJaox118fessmXn1hIVw41oeQa1v1vg4Fv74zPl6/AhSrw 9U5pCZEt4Wi4wStz6dTZ/CLANx8LZh1J7QJVj2fhMtfTJr9w4z30Z209fOU0iOMy +qduBmpvvYuR7hZL6Dupszfnw0Skfths18dG9ZKb59UhvmaSGZRVbNQpsg3BZlvi d0lIKO2d1xozclOzgjXPYovJJIultzkMu34qQb9Sz/yilrbCgj8= -----END CERTIFICATE----- In that case, the expiration warning is displayed: 2022-01-16T15:45:41.802+0100 [WARN] cert-monitor: Certifcate Expired: subject=\"CN=GTS Root R1,O=Google Trust Services LLC,C=US\" Skew Date=\"2049-06-03 16:45:41.802034899 +0200 CEST m=+864000000.093509265\" NotAfter=\"2028-01-28 00:00:42 +0000 UTC\" Skew Days=10000 --no-text \u00b6 Disable text output, only the PEM certificates will be displayed. Tip Typically, you can use this feature with openssl x509 . For example: cert-monitor fetch tls --url https://google.com --index 2 --no-text | openssl x509 -text cert-monitor fetch tls --url https://google.com --index 2 --no-text -----BEGIN CERTIFICATE----- MIIFYjCCBEqgAwIBAgIQd70NbNs2+RrqIQ/E8FjTDTANBgkqhkiG9w0BAQsFADBX MQswCQYDVQQGEwJCRTEZMBcGA1UEChMQR2xvYmFsU2lnbiBudi1zYTEQMA4GA1UE CxMHUm9vdCBDQTEbMBkGA1UEAxMSR2xvYmFsU2lnbiBSb290IENBMB4XDTIwMDYx OTAwMDA0MloXDTI4MDEyODAwMDA0MlowRzELMAkGA1UEBhMCVVMxIjAgBgNVBAoT GUdvb2dsZSBUcnVzdCBTZXJ2aWNlcyBMTEMxFDASBgNVBAMTC0dUUyBSb290IFIx MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAthECix7joXebO9y/lD63 ladAPKH9gvl9MgaCcfb2jH/76Nu8ai6Xl6OMS/kr9rH5zoQdsfnFl97vufKj6bwS iV6nqlKr+CMny6SxnGPb15l+8Ape62im9MZaRw1NEDPjTrETo8gYbEvs/AmQ351k KSUjB6G00j0uYODP0gmHu81I8E3CwnqIiru6z1kZ1q+PsAewnjHxgsHA3y6mbWwZ DrXYfiYaRQM9sHmklCitD38m5agI/pboPGiUU+6DOogrFZYJsuB6jC511pzrp1Zk j5ZPaK49l8KEj8C8QMALXL32h7M1bKwYUH+E4EzNktMg6TO8UpmvMrUpsyUqtEj5 cuHKZPfmghCN6J3Cioj6OGaK/GP5Afl4/Xtcd/p2h/rs37EOeZVXtL0m79YB0esW CruOC7XFxYpVq9Os6pFLKcwZpDIlTirxZUTQAs6qzkm06p98g7BAe+dDq6dso499 iYH6TKX/1Y7DzkvgtdizjkXPdsDtQCv9Uw+wp9U7DbGKogPeMa3Md+pvez7W35Ei Eua++tgy/BBjFFFy3l3WFpO9KWgz7zpm7AeKJt8T11dleCfeXkkUAKIAf5qoIbap sZWwpbkNFhHax2xIPEDgfg1azVY80ZcFuctL7TlLnMQ/0lUTbiSw1nH69MG6zO0b 9f6BQdgAmD06yK56mDcYBZUCAwEAAaOCATgwggE0MA4GA1UdDwEB/wQEAwIBhjAP BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTkrysmcRorSCeFL1JmLO/wiRNxPjAf BgNVHSMEGDAWgBRge2YaRQ2XyolQL30EzTSo//z9SzBgBggrBgEFBQcBAQRUMFIw JQYIKwYBBQUHMAGGGWh0dHA6Ly9vY3NwLnBraS5nb29nL2dzcjEwKQYIKwYBBQUH MAKGHWh0dHA6Ly9wa2kuZ29vZy9nc3IxL2dzcjEuY3J0MDIGA1UdHwQrMCkwJ6Al oCOGIWh0dHA6Ly9jcmwucGtpLmdvb2cvZ3NyMS9nc3IxLmNybDA7BgNVHSAENDAy MAgGBmeBDAECATAIBgZngQwBAgIwDQYLKwYBBAHWeQIFAwIwDQYLKwYBBAHWeQIF AwMwDQYJKoZIhvcNAQELBQADggEBADSkHrEoo9C0dhemMXoh6dFSPsjbdBZBiLg9 NR3t5P+T4Vxfq7vqfM/b5A3Ri1fyJm9bvhdGaJQ3b2t6yMAYN/olUazsaL+yyEn9 WprKASOshIArAoyZl+tJaox118fessmXn1hIVw41oeQa1v1vg4Fv74zPl6/AhSrw 9U5pCZEt4Wi4wStz6dTZ/CLANx8LZh1J7QJVj2fhMtfTJr9w4z30Z209fOU0iOMy +qduBmpvvYuR7hZL6Dupszfnw0Skfths18dG9ZKb59UhvmaSGZRVbNQpsg3BZlvi d0lIKO2d1xozclOzgjXPYovJJIultzkMu34qQb9Sz/yilrbCgj8= -----END CERTIFICATE----- --skip-tls-validation \u00b6 Disable the validation of TLS certificate (expiration and CA Path Validation). cert-monitor fetch tls --url https://expired.badssl.com You will see an error message like: 2022-01-16T15:58:10.455+0100 [ERROR] cert-monitor: Error fetching certificate from remote: url=https://expired.badssl.com err=\"Head \\\"https://expired.badssl.com\\\": x509: certificate has expired or is not yet valid: current time 2022-01-16T15:58:10+01:00 is after 2015-04-12T23:59:59Z\" Example with --skip-tls-validation cert-monitor fetch tls --url https://expired.badssl.com --skip-tls-validation --index 0 2022-01-16T15:59:48.174+0100 [INFO] cert-monitor: X509 Certificate: index=0 Subject=\"CN=*.badssl.com,OU=Domain Control Validated+OU=PositiveSSL Wildcard\" 2022-01-16T15:59:48.174+0100 [INFO] cert-monitor: X509 Certificate: index=0 Issuer=\"CN=COMODO RSA Domain Validation Secure Server CA,O=COMODO CA Limited,L=Salford,ST=Greater Manchester,C=GB\" 2022-01-16T15:59:48.174+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotBefore=\"2015-04-09 00:00:00 +0000 UTC\" 2022-01-16T15:59:48.174+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotAfter=\"2015-04-12 23:59:59 +0000 UTC\" 2022-01-16T15:59:48.174+0100 [WARN] cert-monitor: Certifcate Expired: subject=\"CN=*.badssl.com,OU=Domain Control Validated+OU=PositiveSSL Wildcard\" Skew Date=\"2022-04-16 16:59:48.174549501 +0200 CEST m=+7776000.656172049\" NotAfter=\"2015-04-12 23:59:59 +0000 UTC\" Skew Days=90 2022-01-16T15:59:48.174+0100 [INFO] cert-monitor: X509 Certificate: index=0 -----BEGIN CERTIFICATE----- MIIFSzCCBDOgAwIBAgIQSueVSfqavj8QDxekeOFpCTANBgkqhkiG9w0BAQsFADCB kDELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxNjA0BgNV BAMTLUNPTU9ETyBSU0EgRG9tYWluIFZhbGlkYXRpb24gU2VjdXJlIFNlcnZlciBD QTAeFw0xNTA0MDkwMDAwMDBaFw0xNTA0MTIyMzU5NTlaMFkxITAfBgNVBAsTGERv bWFpbiBDb250cm9sIFZhbGlkYXRlZDEdMBsGA1UECxMUUG9zaXRpdmVTU0wgV2ls ZGNhcmQxFTATBgNVBAMUDCouYmFkc3NsLmNvbTCCASIwDQYJKoZIhvcNAQEBBQAD ggEPADCCAQoCggEBAMIE7PiM7gTCs9hQ1XBYzJMY61yoaEmwIrX5lZ6xKyx2PmzA S2BMTOqytMAPgLaw+XLJhgL5XEFdEyt/ccRLvOmULlA3pmccYYz2QULFRtMWhyef dOsKnRFSJiFzbIRMeVXk0WvoBj1IFVKtsyjbqv9u/2CVSndrOfEk0TG23U3AxPxT uW1CrbV8/q71FdIzSOciccfCFHpsKOo3St/qbLVytH5aohbcabFXRNsKEqveww9H dFxBIuGa+RuT5q0iBikusbpJHAwnnqP7i/dAcgCskgjZjFeEU4EFy+b+a1SYQCeF xxC7c3DvaRhBB0VVfPlkPz0sw6l865MaTIbRyoUCAwEAAaOCAdUwggHRMB8GA1Ud IwQYMBaAFJCvajqUWgvYkOoSVnPfQ7Q6KNrnMB0GA1UdDgQWBBSd7sF7gQs6R2lx GH0RN5O8pRs/+zAOBgNVHQ8BAf8EBAMCBaAwDAYDVR0TAQH/BAIwADAdBgNVHSUE FjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwTwYDVR0gBEgwRjA6BgsrBgEEAbIxAQIC BzArMCkGCCsGAQUFBwIBFh1odHRwczovL3NlY3VyZS5jb21vZG8uY29tL0NQUzAI BgZngQwBAgEwVAYDVR0fBE0wSzBJoEegRYZDaHR0cDovL2NybC5jb21vZG9jYS5j b20vQ09NT0RPUlNBRG9tYWluVmFsaWRhdGlvblNlY3VyZVNlcnZlckNBLmNybDCB hQYIKwYBBQUHAQEEeTB3ME8GCCsGAQUFBzAChkNodHRwOi8vY3J0LmNvbW9kb2Nh LmNvbS9DT01PRE9SU0FEb21haW5WYWxpZGF0aW9uU2VjdXJlU2VydmVyQ0EuY3J0 MCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC5jb21vZG9jYS5jb20wIwYDVR0RBBww GoIMKi5iYWRzc2wuY29tggpiYWRzc2wuY29tMA0GCSqGSIb3DQEBCwUAA4IBAQBq evHa/wMHcnjFZqFPRkMOXxQhjHUa6zbgH6QQFezaMyV8O7UKxwE4PSf9WNnM6i1p OXy+l+8L1gtY54x/v7NMHfO3kICmNnwUW+wHLQI+G1tjWxWrAPofOxkt3+IjEBEH fnJ/4r+3ABuYLyw/zoWaJ4wQIghBK4o+gk783SHGVnRwpDTysUCeK1iiWQ8dSO/r ET7BSp68ZVVtxqPv1dSWzfGuJ/ekVxQ8lEEFeouhN0fX9X3c+s5vMaKwjOrMEpsi 8TRwz311SotoKQwe6Zaoz7ASH1wq7mcvf71z81oBIgxw+s1F73hczg36TuHvzmWf RwxPuzZEaFZcVlmtqoq8 -----END CERTIFICATE-----","title":"Fetch"},{"location":"cli/fetch/#fetch","text":"The fetch subcommand is designed to visualize X509 Certificates by making ad-hoc query on remote sources (jwk, saml, tcp, tls). cert-monitor fetch fetch certificate from remote sources Usage: cert-monitor fetch [flags] cert-monitor fetch [command] Available Commands: jwk fetch certificates from remote JWKs endpoint saml fetch certificates from remote SAML metadata tcp fetch certificates from remote tcp endpoint tls fetch certificates from remote TLS url Flags: -h, --help help for fetch -i, --index int Index from certificate list (default -1) --no-color Disable color output --no-text Don't display test (only PEM) --skew int Days to check for expiration (default 90) --skip-tls-validation Skip TLS certificate validation Global Flags: -d, --debug debug mode enabled Use \"cert-monitor fetch [command] --help\" for more information about a command.","title":"Fetch"},{"location":"cli/fetch/#common-options","text":"","title":"Common Options"},{"location":"cli/fetch/#-no-color","text":"Disable colored output.","title":"--no-color"},{"location":"cli/fetch/#-index-int","text":"Remote sources can host multiple certificates (e.g. CAchain + server certificate). The --index (or -i ) can be used to only display the certificate at the specified index in the list of remote certificates. Note Index starts at Zero. Example with HTTPS endpoint: Omitting --index display all certificates from the Remote source (in this example 2 certificates are found) cert-monitor fetch tls --url https://badssl.com 2022-01-16T15:30:42.359+0100 [INFO] cert-monitor: X509 Certificate: index=0 Subject=\"CN=*.badssl.com,O=Lucas Garron Torres,L=Walnut Creek,ST=California,C=US\" 2022-01-16T15:30:42.359+0100 [INFO] cert-monitor: X509 Certificate: index=0 Issuer=\"CN=DigiCert SHA2 Secure Server CA,O=DigiCert Inc,C=US\" 2022-01-16T15:30:42.359+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotBefore=\"2020-03-23 00:00:00 +0000 UTC\" 2022-01-16T15:30:42.359+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotAfter=\"2022-05-17 12:00:00 +0000 UTC\" 2022-01-16T15:30:42.359+0100 [INFO] cert-monitor: X509 Certificate: index=0 -----BEGIN CERTIFICATE----- MIIGqDCCBZCgAwIBAgIQCvBs2jemC2QTQvCh6x1Z/TANBgkqhkiG9w0BAQsFADBN MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMScwJQYDVQQDEx5E aWdpQ2VydCBTSEEyIFNlY3VyZSBTZXJ2ZXIgQ0EwHhcNMjAwMzIzMDAwMDAwWhcN MjIwNTE3MTIwMDAwWjBuMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5p YTEVMBMGA1UEBxMMV2FsbnV0IENyZWVrMRwwGgYDVQQKExNMdWNhcyBHYXJyb24g VG9ycmVzMRUwEwYDVQQDDAwqLmJhZHNzbC5jb20wggEiMA0GCSqGSIb3DQEBAQUA A4IBDwAwggEKAoIBAQDCBOz4jO4EwrPYUNVwWMyTGOtcqGhJsCK1+ZWesSssdj5s wEtgTEzqsrTAD4C2sPlyyYYC+VxBXRMrf3HES7zplC5QN6ZnHGGM9kFCxUbTFocn n3TrCp0RUiYhc2yETHlV5NFr6AY9SBVSrbMo26r/bv9glUp3aznxJNExtt1NwMT8 U7ltQq21fP6u9RXSM0jnInHHwhR6bCjqN0rf6my1crR+WqIW3GmxV0TbChKr3sMP R3RcQSLhmvkbk+atIgYpLrG6SRwMJ56j+4v3QHIArJII2YxXhFOBBcvm/mtUmEAn hccQu3Nw72kYQQdFVXz5ZD89LMOpfOuTGkyG0cqFAgMBAAGjggNhMIIDXTAfBgNV HSMEGDAWgBQPgGEcgjFh1S8o541GOLQs4cbZ4jAdBgNVHQ4EFgQUne7Be4ELOkdp cRh9ETeTvKUbP/swIwYDVR0RBBwwGoIMKi5iYWRzc2wuY29tggpiYWRzc2wuY29t MA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIw awYDVR0fBGQwYjAvoC2gK4YpaHR0cDovL2NybDMuZGlnaWNlcnQuY29tL3NzY2Et c2hhMi1nNi5jcmwwL6AtoCuGKWh0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9zc2Nh LXNoYTItZzYuY3JsMEwGA1UdIARFMEMwNwYJYIZIAYb9bAEBMCowKAYIKwYBBQUH AgEWHGh0dHBzOi8vd3d3LmRpZ2ljZXJ0LmNvbS9DUFMwCAYGZ4EMAQIDMHwGCCsG AQUFBwEBBHAwbjAkBggrBgEFBQcwAYYYaHR0cDovL29jc3AuZGlnaWNlcnQuY29t MEYGCCsGAQUFBzAChjpodHRwOi8vY2FjZXJ0cy5kaWdpY2VydC5jb20vRGlnaUNl cnRTSEEyU2VjdXJlU2VydmVyQ0EuY3J0MAwGA1UdEwEB/wQCMAAwggF+BgorBgEE AdZ5AgQCBIIBbgSCAWoBaAB2ALvZ37wfinG1k5Qjl6qSe0c4V5UKq1LoGpCWZDaO HtGFAAABcQhGXioAAAQDAEcwRQIgDfWVBXEuUZC2YP4Si3AQDidHC4U9e5XTGyG7 SFNDlRkCIQCzikrA1nf7boAdhvaGu2Vkct3VaI+0y8p3gmonU5d9DwB2ACJFRQdZ VSRWlj+hL/H3bYbgIyZjrcBLf13Gg1xu4g8CAAABcQhGXlsAAAQDAEcwRQIhAMWi Vsi2vYdxRCRsu/DMmCyhY0iJPKHE2c6ejPycIbgqAiAs3kSSS0NiUFiHBw7QaQ/s GO+/lNYvjExlzVUWJbgNLwB2AFGjsPX9AXmcVm24N3iPDKR6zBsny/eeiEKaDf7U iwXlAAABcQhGXnoAAAQDAEcwRQIgKsntiBqt8Au8DAABFkxISELhP3U/wb5lb76p vfenWL0CIQDr2kLhCWP/QUNxXqGmvr1GaG9EuokTOLEnGPhGv1cMkDANBgkqhkiG 9w0BAQsFAAOCAQEA0RGxlwy3Tl0lhrUAn2mIi8LcZ9nBUyfAcCXCtYyCdEbjIP64 xgX6pzTt0WJoxzlT+MiK6fc0hECZXqpkTNVTARYtGkJoljlTK2vAdHZ0SOpm9OT4 RLfjGnImY0hiFbZ/LtsvS2Zg7cVJecqnrZe/za/nbDdljnnrll7C8O5naQuKr4te uice3e8a4TtviFwS/wdDnJ3RrE83b1IljILbU5SV0X1NajyYkUWS7AnOmrFUUByz MwdGrM6kt0lfJy/gvGVsgIKZocHdedPeECqAtq7FAJYanOsjNN9RbBOGhbwq0/FP CC01zojqS10nGowxzOiqyB4m6wytmzf0QwjpMw== -----END CERTIFICATE----- 2022-01-16T15:30:42.360+0100 [INFO] cert-monitor: X509 Certificate: index=1 Subject=\"CN=DigiCert SHA2 Secure Server CA,O=DigiCert Inc,C=US\" 2022-01-16T15:30:42.360+0100 [INFO] cert-monitor: X509 Certificate: index=1 Issuer=\"CN=DigiCert Global Root CA,OU=www.digicert.com,O=DigiCert Inc,C=US\" 2022-01-16T15:30:42.360+0100 [INFO] cert-monitor: X509 Certificate: index=1 NotBefore=\"2013-03-08 12:00:00 +0000 UTC\" 2022-01-16T15:30:42.360+0100 [INFO] cert-monitor: X509 Certificate: index=1 NotAfter=\"2023-03-08 12:00:00 +0000 UTC\" 2022-01-16T15:30:42.360+0100 [INFO] cert-monitor: X509 Certificate: index=1 -----BEGIN CERTIFICATE----- MIIElDCCA3ygAwIBAgIQAf2j627KdciIQ4tyS8+8kTANBgkqhkiG9w0BAQsFADBh MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3 d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD QTAeFw0xMzAzMDgxMjAwMDBaFw0yMzAzMDgxMjAwMDBaME0xCzAJBgNVBAYTAlVT MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxJzAlBgNVBAMTHkRpZ2lDZXJ0IFNIQTIg U2VjdXJlIFNlcnZlciBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB ANyuWJBNwcQwFZA1W248ghX1LFy949v/cUP6ZCWA1O4Yok3wZtAKc24RmDYXZK83 nf36QYSvx6+M/hpzTc8zl5CilodTgyu5pnVILR1WN3vaMTIa16yrBvSqXUu3R0bd KpPDkC55gIDvEwRqFDu1m5K+wgdlTvza/P96rtxcflUxDOg5B6TXvi/TC2rSsd9f /ld0Uzs1gN2ujkSYs58O09rg1/RrKatEp0tYhG2SS4HD2nOLEpdIkARFdRrdNzGX kujNVA075ME/OV4uuPNcfhCOhkEAjUVmR7ChZc6gqikJTvOX6+guqw9ypzAO+sf0 /RR3w6RbKFfCs/mC/bdFWJsCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8C AQAwDgYDVR0PAQH/BAQDAgGGMDQGCCsGAQUFBwEBBCgwJjAkBggrBgEFBQcwAYYY aHR0cDovL29jc3AuZGlnaWNlcnQuY29tMHsGA1UdHwR0MHIwN6A1oDOGMWh0dHA6 Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEdsb2JhbFJvb3RDQS5jcmwwN6A1 oDOGMWh0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEdsb2JhbFJvb3RD QS5jcmwwPQYDVR0gBDYwNDAyBgRVHSAAMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8v d3d3LmRpZ2ljZXJ0LmNvbS9DUFMwHQYDVR0OBBYEFA+AYRyCMWHVLyjnjUY4tCzh xtniMB8GA1UdIwQYMBaAFAPeUDVW0Uy7ZvCj4hsbw5eyPdFVMA0GCSqGSIb3DQEB CwUAA4IBAQAjPt9L0jFCpbZ+QlwaRMxp0Wi0XUvgBCFsS+JtzLHgl4+mUwnNqipl 5TlPHoOlblyYoiQm5vuh7ZPHLgLGTUq/sELfeNqzqPlt/yGFUzZgTHbO7Djc1lGA 8MXW5dRNJ2Srm8c+cftIl7gzbckTB+6WohsYFfZcTEDts8Ls/3HB40f/1LkAtDdC 2iDJ6m6K7hQGrn2iWZiIqBtvLfTyyRRfJs8sjX7tN8Cp1Tm5gr8ZDOo0rwAhaPit c+LJMto4JQtV05od8GiG7S5BNO98pVAdvzr508EIDObtHopYJeS4d60tbvVS3bR0 j6tJLp07kzQoH3jOlOrHvdPJbRzeXDLz -----END CERTIFICATE----- Use --index 1 to only display the second certificate cert-monitor fetch tls --url https://badssl.com --index 1 2022-01-16T15:34:53.294+0100 [INFO] cert-monitor: X509 Certificate: index=1 Subject=\"CN=DigiCert SHA2 Secure Server CA,O=DigiCert Inc,C=US\" 2022-01-16T15:34:53.295+0100 [INFO] cert-monitor: X509 Certificate: index=1 Issuer=\"CN=DigiCert Global Root CA,OU=www.digicert.com,O=DigiCert Inc,C=US\" 2022-01-16T15:34:53.295+0100 [INFO] cert-monitor: X509 Certificate: index=1 NotBefore=\"2013-03-08 12:00:00 +0000 UTC\" 2022-01-16T15:34:53.295+0100 [INFO] cert-monitor: X509 Certificate: index=1 NotAfter=\"2023-03-08 12:00:00 +0000 UTC\" 2022-01-16T15:34:53.295+0100 [INFO] cert-monitor: X509 Certificate: index=1 -----BEGIN CERTIFICATE----- MIIElDCCA3ygAwIBAgIQAf2j627KdciIQ4tyS8+8kTANBgkqhkiG9w0BAQsFADBh MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3 d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD QTAeFw0xMzAzMDgxMjAwMDBaFw0yMzAzMDgxMjAwMDBaME0xCzAJBgNVBAYTAlVT MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxJzAlBgNVBAMTHkRpZ2lDZXJ0IFNIQTIg U2VjdXJlIFNlcnZlciBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB ANyuWJBNwcQwFZA1W248ghX1LFy949v/cUP6ZCWA1O4Yok3wZtAKc24RmDYXZK83 nf36QYSvx6+M/hpzTc8zl5CilodTgyu5pnVILR1WN3vaMTIa16yrBvSqXUu3R0bd KpPDkC55gIDvEwRqFDu1m5K+wgdlTvza/P96rtxcflUxDOg5B6TXvi/TC2rSsd9f /ld0Uzs1gN2ujkSYs58O09rg1/RrKatEp0tYhG2SS4HD2nOLEpdIkARFdRrdNzGX kujNVA075ME/OV4uuPNcfhCOhkEAjUVmR7ChZc6gqikJTvOX6+guqw9ypzAO+sf0 /RR3w6RbKFfCs/mC/bdFWJsCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8C AQAwDgYDVR0PAQH/BAQDAgGGMDQGCCsGAQUFBwEBBCgwJjAkBggrBgEFBQcwAYYY aHR0cDovL29jc3AuZGlnaWNlcnQuY29tMHsGA1UdHwR0MHIwN6A1oDOGMWh0dHA6 Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEdsb2JhbFJvb3RDQS5jcmwwN6A1 oDOGMWh0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEdsb2JhbFJvb3RD QS5jcmwwPQYDVR0gBDYwNDAyBgRVHSAAMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8v d3d3LmRpZ2ljZXJ0LmNvbS9DUFMwHQYDVR0OBBYEFA+AYRyCMWHVLyjnjUY4tCzh xtniMB8GA1UdIwQYMBaAFAPeUDVW0Uy7ZvCj4hsbw5eyPdFVMA0GCSqGSIb3DQEB CwUAA4IBAQAjPt9L0jFCpbZ+QlwaRMxp0Wi0XUvgBCFsS+JtzLHgl4+mUwnNqipl 5TlPHoOlblyYoiQm5vuh7ZPHLgLGTUq/sELfeNqzqPlt/yGFUzZgTHbO7Djc1lGA 8MXW5dRNJ2Srm8c+cftIl7gzbckTB+6WohsYFfZcTEDts8Ls/3HB40f/1LkAtDdC 2iDJ6m6K7hQGrn2iWZiIqBtvLfTyyRRfJs8sjX7tN8Cp1Tm5gr8ZDOo0rwAhaPit c+LJMto4JQtV05od8GiG7S5BNO98pVAdvzr508EIDObtHopYJeS4d60tbvVS3bR0 j6tJLp07kzQoH3jOlOrHvdPJbRzeXDLz -----END CERTIFICATE-----","title":"--index int"},{"location":"cli/fetch/#-skew-int","text":"A warning message will be displayed if a given X509 Certificates is expired or will expire with the next skew number of days. By default the skew is set to 90 days, but you can override this using --skew flag. For example: with default skew (90 days): cert-monitor fetch tls --url https://google.com --index 2 2022-01-16T15:44:38.801+0100 [INFO] cert-monitor: X509 Certificate: index=2 Subject=\"CN=GTS Root R1,O=Google Trust Services LLC,C=US\" 2022-01-16T15:44:38.801+0100 [INFO] cert-monitor: X509 Certificate: index=2 Issuer=\"CN=GlobalSign Root CA,OU=Root CA,O=GlobalSign nv-sa,C=BE\" 2022-01-16T15:44:38.801+0100 [INFO] cert-monitor: X509 Certificate: index=2 NotBefore=\"2020-06-19 00:00:42 +0000 UTC\" 2022-01-16T15:44:38.801+0100 [INFO] cert-monitor: X509 Certificate: index=2 NotAfter=\"2028-01-28 00:00:42 +0000 UTC\" 2022-01-16T15:44:38.801+0100 [INFO] cert-monitor: X509 Certificate: index=2 -----BEGIN CERTIFICATE----- MIIFYjCCBEqgAwIBAgIQd70NbNs2+RrqIQ/E8FjTDTANBgkqhkiG9w0BAQsFADBX MQswCQYDVQQGEwJCRTEZMBcGA1UEChMQR2xvYmFsU2lnbiBudi1zYTEQMA4GA1UE CxMHUm9vdCBDQTEbMBkGA1UEAxMSR2xvYmFsU2lnbiBSb290IENBMB4XDTIwMDYx OTAwMDA0MloXDTI4MDEyODAwMDA0MlowRzELMAkGA1UEBhMCVVMxIjAgBgNVBAoT GUdvb2dsZSBUcnVzdCBTZXJ2aWNlcyBMTEMxFDASBgNVBAMTC0dUUyBSb290IFIx MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAthECix7joXebO9y/lD63 ladAPKH9gvl9MgaCcfb2jH/76Nu8ai6Xl6OMS/kr9rH5zoQdsfnFl97vufKj6bwS iV6nqlKr+CMny6SxnGPb15l+8Ape62im9MZaRw1NEDPjTrETo8gYbEvs/AmQ351k KSUjB6G00j0uYODP0gmHu81I8E3CwnqIiru6z1kZ1q+PsAewnjHxgsHA3y6mbWwZ DrXYfiYaRQM9sHmklCitD38m5agI/pboPGiUU+6DOogrFZYJsuB6jC511pzrp1Zk j5ZPaK49l8KEj8C8QMALXL32h7M1bKwYUH+E4EzNktMg6TO8UpmvMrUpsyUqtEj5 cuHKZPfmghCN6J3Cioj6OGaK/GP5Afl4/Xtcd/p2h/rs37EOeZVXtL0m79YB0esW CruOC7XFxYpVq9Os6pFLKcwZpDIlTirxZUTQAs6qzkm06p98g7BAe+dDq6dso499 iYH6TKX/1Y7DzkvgtdizjkXPdsDtQCv9Uw+wp9U7DbGKogPeMa3Md+pvez7W35Ei Eua++tgy/BBjFFFy3l3WFpO9KWgz7zpm7AeKJt8T11dleCfeXkkUAKIAf5qoIbap sZWwpbkNFhHax2xIPEDgfg1azVY80ZcFuctL7TlLnMQ/0lUTbiSw1nH69MG6zO0b 9f6BQdgAmD06yK56mDcYBZUCAwEAAaOCATgwggE0MA4GA1UdDwEB/wQEAwIBhjAP BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTkrysmcRorSCeFL1JmLO/wiRNxPjAf BgNVHSMEGDAWgBRge2YaRQ2XyolQL30EzTSo//z9SzBgBggrBgEFBQcBAQRUMFIw JQYIKwYBBQUHMAGGGWh0dHA6Ly9vY3NwLnBraS5nb29nL2dzcjEwKQYIKwYBBQUH MAKGHWh0dHA6Ly9wa2kuZ29vZy9nc3IxL2dzcjEuY3J0MDIGA1UdHwQrMCkwJ6Al oCOGIWh0dHA6Ly9jcmwucGtpLmdvb2cvZ3NyMS9nc3IxLmNybDA7BgNVHSAENDAy MAgGBmeBDAECATAIBgZngQwBAgIwDQYLKwYBBAHWeQIFAwIwDQYLKwYBBAHWeQIF AwMwDQYJKoZIhvcNAQELBQADggEBADSkHrEoo9C0dhemMXoh6dFSPsjbdBZBiLg9 NR3t5P+T4Vxfq7vqfM/b5A3Ri1fyJm9bvhdGaJQ3b2t6yMAYN/olUazsaL+yyEn9 WprKASOshIArAoyZl+tJaox118fessmXn1hIVw41oeQa1v1vg4Fv74zPl6/AhSrw 9U5pCZEt4Wi4wStz6dTZ/CLANx8LZh1J7QJVj2fhMtfTJr9w4z30Z209fOU0iOMy +qduBmpvvYuR7hZL6Dupszfnw0Skfths18dG9ZKb59UhvmaSGZRVbNQpsg3BZlvi d0lIKO2d1xozclOzgjXPYovJJIultzkMu34qQb9Sz/yilrbCgj8= -----END CERTIFICATE----- with a --skew 10000 (10 000 days): cert-monitor fetch tls --url https://google.com --index 2 --skew 10000 2022-01-16T15:45:41.801+0100 [INFO] cert-monitor: X509 Certificate: index=2 Subject=\"CN=GTS Root R1,O=Google Trust Services LLC,C=US\" 2022-01-16T15:45:41.802+0100 [INFO] cert-monitor: X509 Certificate: index=2 Issuer=\"CN=GlobalSign Root CA,OU=Root CA,O=GlobalSign nv-sa,C=BE\" 2022-01-16T15:45:41.802+0100 [INFO] cert-monitor: X509 Certificate: index=2 NotBefore=\"2020-06-19 00:00:42 +0000 UTC\" 2022-01-16T15:45:41.802+0100 [INFO] cert-monitor: X509 Certificate: index=2 NotAfter=\"2028-01-28 00:00:42 +0000 UTC\" 2022-01-16T15:45:41.802+0100 [WARN] cert-monitor: Certifcate Expired: subject=\"CN=GTS Root R1,O=Google Trust Services LLC,C=US\" Skew Date=\"2049-06-03 16:45:41.802034899 +0200 CEST m=+864000000.093509265\" NotAfter=\"2028-01-28 00:00:42 +0000 UTC\" Skew Days=10000 2022-01-16T15:45:41.802+0100 [INFO] cert-monitor: X509 Certificate: index=2 -----BEGIN CERTIFICATE----- MIIFYjCCBEqgAwIBAgIQd70NbNs2+RrqIQ/E8FjTDTANBgkqhkiG9w0BAQsFADBX MQswCQYDVQQGEwJCRTEZMBcGA1UEChMQR2xvYmFsU2lnbiBudi1zYTEQMA4GA1UE CxMHUm9vdCBDQTEbMBkGA1UEAxMSR2xvYmFsU2lnbiBSb290IENBMB4XDTIwMDYx OTAwMDA0MloXDTI4MDEyODAwMDA0MlowRzELMAkGA1UEBhMCVVMxIjAgBgNVBAoT GUdvb2dsZSBUcnVzdCBTZXJ2aWNlcyBMTEMxFDASBgNVBAMTC0dUUyBSb290IFIx MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAthECix7joXebO9y/lD63 ladAPKH9gvl9MgaCcfb2jH/76Nu8ai6Xl6OMS/kr9rH5zoQdsfnFl97vufKj6bwS iV6nqlKr+CMny6SxnGPb15l+8Ape62im9MZaRw1NEDPjTrETo8gYbEvs/AmQ351k KSUjB6G00j0uYODP0gmHu81I8E3CwnqIiru6z1kZ1q+PsAewnjHxgsHA3y6mbWwZ DrXYfiYaRQM9sHmklCitD38m5agI/pboPGiUU+6DOogrFZYJsuB6jC511pzrp1Zk j5ZPaK49l8KEj8C8QMALXL32h7M1bKwYUH+E4EzNktMg6TO8UpmvMrUpsyUqtEj5 cuHKZPfmghCN6J3Cioj6OGaK/GP5Afl4/Xtcd/p2h/rs37EOeZVXtL0m79YB0esW CruOC7XFxYpVq9Os6pFLKcwZpDIlTirxZUTQAs6qzkm06p98g7BAe+dDq6dso499 iYH6TKX/1Y7DzkvgtdizjkXPdsDtQCv9Uw+wp9U7DbGKogPeMa3Md+pvez7W35Ei Eua++tgy/BBjFFFy3l3WFpO9KWgz7zpm7AeKJt8T11dleCfeXkkUAKIAf5qoIbap sZWwpbkNFhHax2xIPEDgfg1azVY80ZcFuctL7TlLnMQ/0lUTbiSw1nH69MG6zO0b 9f6BQdgAmD06yK56mDcYBZUCAwEAAaOCATgwggE0MA4GA1UdDwEB/wQEAwIBhjAP BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTkrysmcRorSCeFL1JmLO/wiRNxPjAf BgNVHSMEGDAWgBRge2YaRQ2XyolQL30EzTSo//z9SzBgBggrBgEFBQcBAQRUMFIw JQYIKwYBBQUHMAGGGWh0dHA6Ly9vY3NwLnBraS5nb29nL2dzcjEwKQYIKwYBBQUH MAKGHWh0dHA6Ly9wa2kuZ29vZy9nc3IxL2dzcjEuY3J0MDIGA1UdHwQrMCkwJ6Al oCOGIWh0dHA6Ly9jcmwucGtpLmdvb2cvZ3NyMS9nc3IxLmNybDA7BgNVHSAENDAy MAgGBmeBDAECATAIBgZngQwBAgIwDQYLKwYBBAHWeQIFAwIwDQYLKwYBBAHWeQIF AwMwDQYJKoZIhvcNAQELBQADggEBADSkHrEoo9C0dhemMXoh6dFSPsjbdBZBiLg9 NR3t5P+T4Vxfq7vqfM/b5A3Ri1fyJm9bvhdGaJQ3b2t6yMAYN/olUazsaL+yyEn9 WprKASOshIArAoyZl+tJaox118fessmXn1hIVw41oeQa1v1vg4Fv74zPl6/AhSrw 9U5pCZEt4Wi4wStz6dTZ/CLANx8LZh1J7QJVj2fhMtfTJr9w4z30Z209fOU0iOMy +qduBmpvvYuR7hZL6Dupszfnw0Skfths18dG9ZKb59UhvmaSGZRVbNQpsg3BZlvi d0lIKO2d1xozclOzgjXPYovJJIultzkMu34qQb9Sz/yilrbCgj8= -----END CERTIFICATE----- In that case, the expiration warning is displayed: 2022-01-16T15:45:41.802+0100 [WARN] cert-monitor: Certifcate Expired: subject=\"CN=GTS Root R1,O=Google Trust Services LLC,C=US\" Skew Date=\"2049-06-03 16:45:41.802034899 +0200 CEST m=+864000000.093509265\" NotAfter=\"2028-01-28 00:00:42 +0000 UTC\" Skew Days=10000","title":"--skew int"},{"location":"cli/fetch/#-no-text","text":"Disable text output, only the PEM certificates will be displayed. Tip Typically, you can use this feature with openssl x509 . For example: cert-monitor fetch tls --url https://google.com --index 2 --no-text | openssl x509 -text cert-monitor fetch tls --url https://google.com --index 2 --no-text -----BEGIN CERTIFICATE----- MIIFYjCCBEqgAwIBAgIQd70NbNs2+RrqIQ/E8FjTDTANBgkqhkiG9w0BAQsFADBX MQswCQYDVQQGEwJCRTEZMBcGA1UEChMQR2xvYmFsU2lnbiBudi1zYTEQMA4GA1UE CxMHUm9vdCBDQTEbMBkGA1UEAxMSR2xvYmFsU2lnbiBSb290IENBMB4XDTIwMDYx OTAwMDA0MloXDTI4MDEyODAwMDA0MlowRzELMAkGA1UEBhMCVVMxIjAgBgNVBAoT GUdvb2dsZSBUcnVzdCBTZXJ2aWNlcyBMTEMxFDASBgNVBAMTC0dUUyBSb290IFIx MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAthECix7joXebO9y/lD63 ladAPKH9gvl9MgaCcfb2jH/76Nu8ai6Xl6OMS/kr9rH5zoQdsfnFl97vufKj6bwS iV6nqlKr+CMny6SxnGPb15l+8Ape62im9MZaRw1NEDPjTrETo8gYbEvs/AmQ351k KSUjB6G00j0uYODP0gmHu81I8E3CwnqIiru6z1kZ1q+PsAewnjHxgsHA3y6mbWwZ DrXYfiYaRQM9sHmklCitD38m5agI/pboPGiUU+6DOogrFZYJsuB6jC511pzrp1Zk j5ZPaK49l8KEj8C8QMALXL32h7M1bKwYUH+E4EzNktMg6TO8UpmvMrUpsyUqtEj5 cuHKZPfmghCN6J3Cioj6OGaK/GP5Afl4/Xtcd/p2h/rs37EOeZVXtL0m79YB0esW CruOC7XFxYpVq9Os6pFLKcwZpDIlTirxZUTQAs6qzkm06p98g7BAe+dDq6dso499 iYH6TKX/1Y7DzkvgtdizjkXPdsDtQCv9Uw+wp9U7DbGKogPeMa3Md+pvez7W35Ei Eua++tgy/BBjFFFy3l3WFpO9KWgz7zpm7AeKJt8T11dleCfeXkkUAKIAf5qoIbap sZWwpbkNFhHax2xIPEDgfg1azVY80ZcFuctL7TlLnMQ/0lUTbiSw1nH69MG6zO0b 9f6BQdgAmD06yK56mDcYBZUCAwEAAaOCATgwggE0MA4GA1UdDwEB/wQEAwIBhjAP BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTkrysmcRorSCeFL1JmLO/wiRNxPjAf BgNVHSMEGDAWgBRge2YaRQ2XyolQL30EzTSo//z9SzBgBggrBgEFBQcBAQRUMFIw JQYIKwYBBQUHMAGGGWh0dHA6Ly9vY3NwLnBraS5nb29nL2dzcjEwKQYIKwYBBQUH MAKGHWh0dHA6Ly9wa2kuZ29vZy9nc3IxL2dzcjEuY3J0MDIGA1UdHwQrMCkwJ6Al oCOGIWh0dHA6Ly9jcmwucGtpLmdvb2cvZ3NyMS9nc3IxLmNybDA7BgNVHSAENDAy MAgGBmeBDAECATAIBgZngQwBAgIwDQYLKwYBBAHWeQIFAwIwDQYLKwYBBAHWeQIF AwMwDQYJKoZIhvcNAQELBQADggEBADSkHrEoo9C0dhemMXoh6dFSPsjbdBZBiLg9 NR3t5P+T4Vxfq7vqfM/b5A3Ri1fyJm9bvhdGaJQ3b2t6yMAYN/olUazsaL+yyEn9 WprKASOshIArAoyZl+tJaox118fessmXn1hIVw41oeQa1v1vg4Fv74zPl6/AhSrw 9U5pCZEt4Wi4wStz6dTZ/CLANx8LZh1J7QJVj2fhMtfTJr9w4z30Z209fOU0iOMy +qduBmpvvYuR7hZL6Dupszfnw0Skfths18dG9ZKb59UhvmaSGZRVbNQpsg3BZlvi d0lIKO2d1xozclOzgjXPYovJJIultzkMu34qQb9Sz/yilrbCgj8= -----END CERTIFICATE-----","title":"--no-text"},{"location":"cli/fetch/#-skip-tls-validation","text":"Disable the validation of TLS certificate (expiration and CA Path Validation). cert-monitor fetch tls --url https://expired.badssl.com You will see an error message like: 2022-01-16T15:58:10.455+0100 [ERROR] cert-monitor: Error fetching certificate from remote: url=https://expired.badssl.com err=\"Head \\\"https://expired.badssl.com\\\": x509: certificate has expired or is not yet valid: current time 2022-01-16T15:58:10+01:00 is after 2015-04-12T23:59:59Z\" Example with --skip-tls-validation cert-monitor fetch tls --url https://expired.badssl.com --skip-tls-validation --index 0 2022-01-16T15:59:48.174+0100 [INFO] cert-monitor: X509 Certificate: index=0 Subject=\"CN=*.badssl.com,OU=Domain Control Validated+OU=PositiveSSL Wildcard\" 2022-01-16T15:59:48.174+0100 [INFO] cert-monitor: X509 Certificate: index=0 Issuer=\"CN=COMODO RSA Domain Validation Secure Server CA,O=COMODO CA Limited,L=Salford,ST=Greater Manchester,C=GB\" 2022-01-16T15:59:48.174+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotBefore=\"2015-04-09 00:00:00 +0000 UTC\" 2022-01-16T15:59:48.174+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotAfter=\"2015-04-12 23:59:59 +0000 UTC\" 2022-01-16T15:59:48.174+0100 [WARN] cert-monitor: Certifcate Expired: subject=\"CN=*.badssl.com,OU=Domain Control Validated+OU=PositiveSSL Wildcard\" Skew Date=\"2022-04-16 16:59:48.174549501 +0200 CEST m=+7776000.656172049\" NotAfter=\"2015-04-12 23:59:59 +0000 UTC\" Skew Days=90 2022-01-16T15:59:48.174+0100 [INFO] cert-monitor: X509 Certificate: index=0 -----BEGIN CERTIFICATE----- MIIFSzCCBDOgAwIBAgIQSueVSfqavj8QDxekeOFpCTANBgkqhkiG9w0BAQsFADCB kDELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxNjA0BgNV BAMTLUNPTU9ETyBSU0EgRG9tYWluIFZhbGlkYXRpb24gU2VjdXJlIFNlcnZlciBD QTAeFw0xNTA0MDkwMDAwMDBaFw0xNTA0MTIyMzU5NTlaMFkxITAfBgNVBAsTGERv bWFpbiBDb250cm9sIFZhbGlkYXRlZDEdMBsGA1UECxMUUG9zaXRpdmVTU0wgV2ls ZGNhcmQxFTATBgNVBAMUDCouYmFkc3NsLmNvbTCCASIwDQYJKoZIhvcNAQEBBQAD ggEPADCCAQoCggEBAMIE7PiM7gTCs9hQ1XBYzJMY61yoaEmwIrX5lZ6xKyx2PmzA S2BMTOqytMAPgLaw+XLJhgL5XEFdEyt/ccRLvOmULlA3pmccYYz2QULFRtMWhyef dOsKnRFSJiFzbIRMeVXk0WvoBj1IFVKtsyjbqv9u/2CVSndrOfEk0TG23U3AxPxT uW1CrbV8/q71FdIzSOciccfCFHpsKOo3St/qbLVytH5aohbcabFXRNsKEqveww9H dFxBIuGa+RuT5q0iBikusbpJHAwnnqP7i/dAcgCskgjZjFeEU4EFy+b+a1SYQCeF xxC7c3DvaRhBB0VVfPlkPz0sw6l865MaTIbRyoUCAwEAAaOCAdUwggHRMB8GA1Ud IwQYMBaAFJCvajqUWgvYkOoSVnPfQ7Q6KNrnMB0GA1UdDgQWBBSd7sF7gQs6R2lx GH0RN5O8pRs/+zAOBgNVHQ8BAf8EBAMCBaAwDAYDVR0TAQH/BAIwADAdBgNVHSUE FjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwTwYDVR0gBEgwRjA6BgsrBgEEAbIxAQIC BzArMCkGCCsGAQUFBwIBFh1odHRwczovL3NlY3VyZS5jb21vZG8uY29tL0NQUzAI BgZngQwBAgEwVAYDVR0fBE0wSzBJoEegRYZDaHR0cDovL2NybC5jb21vZG9jYS5j b20vQ09NT0RPUlNBRG9tYWluVmFsaWRhdGlvblNlY3VyZVNlcnZlckNBLmNybDCB hQYIKwYBBQUHAQEEeTB3ME8GCCsGAQUFBzAChkNodHRwOi8vY3J0LmNvbW9kb2Nh LmNvbS9DT01PRE9SU0FEb21haW5WYWxpZGF0aW9uU2VjdXJlU2VydmVyQ0EuY3J0 MCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC5jb21vZG9jYS5jb20wIwYDVR0RBBww GoIMKi5iYWRzc2wuY29tggpiYWRzc2wuY29tMA0GCSqGSIb3DQEBCwUAA4IBAQBq evHa/wMHcnjFZqFPRkMOXxQhjHUa6zbgH6QQFezaMyV8O7UKxwE4PSf9WNnM6i1p OXy+l+8L1gtY54x/v7NMHfO3kICmNnwUW+wHLQI+G1tjWxWrAPofOxkt3+IjEBEH fnJ/4r+3ABuYLyw/zoWaJ4wQIghBK4o+gk783SHGVnRwpDTysUCeK1iiWQ8dSO/r ET7BSp68ZVVtxqPv1dSWzfGuJ/ekVxQ8lEEFeouhN0fX9X3c+s5vMaKwjOrMEpsi 8TRwz311SotoKQwe6Zaoz7ASH1wq7mcvf71z81oBIgxw+s1F73hczg36TuHvzmWf RwxPuzZEaFZcVlmtqoq8 -----END CERTIFICATE-----","title":"--skip-tls-validation"},{"location":"cli/fetch_jwk/","text":"Fetch JWK \u00b6 Fetch JWK from remote endpoint, parse and extract X509 Certificate from the JSON content. Info In the JSON Web Key standard the X509 Certificates are found under the x5c field. This field is optional and not widely used. Usage \u00b6 cert-monitor fetch jwk Usage: cert-monitor fetch jwk [flags] Examples: cert-monitor fetch jwk -j https://idp.iamfas.belgium.be/fas/oauth2/connect/jwk_uri Flags: --alg string JWK Algorithm (alg) -h, --help help for jwk -j, --jwk-url string JWK url --kid string JWK Key ID (kid) --kty string JWK Key Type (kty) Global Flags: -d, --debug debug mode enabled -i, --index int Index from certificate list (default -1) --no-color Disable color output --no-text Don't display test (only PEM) --skew int Days to check for expiration (default 90) --skip-tls-validation Skip TLS certificate validation Filters \u00b6 You can use one or more filters to restrict which JSON Web Key to display. --alg string \u00b6 Only display JSON Web Key matching the algorithm specified. --kid string \u00b6 Only display JSON Web Key matching the KeyID specified. --kty string \u00b6 Only display JSON Web Key matching the KeyType specified.","title":"Fetch JWK"},{"location":"cli/fetch_jwk/#fetch-jwk","text":"Fetch JWK from remote endpoint, parse and extract X509 Certificate from the JSON content. Info In the JSON Web Key standard the X509 Certificates are found under the x5c field. This field is optional and not widely used.","title":"Fetch JWK"},{"location":"cli/fetch_jwk/#usage","text":"cert-monitor fetch jwk Usage: cert-monitor fetch jwk [flags] Examples: cert-monitor fetch jwk -j https://idp.iamfas.belgium.be/fas/oauth2/connect/jwk_uri Flags: --alg string JWK Algorithm (alg) -h, --help help for jwk -j, --jwk-url string JWK url --kid string JWK Key ID (kid) --kty string JWK Key Type (kty) Global Flags: -d, --debug debug mode enabled -i, --index int Index from certificate list (default -1) --no-color Disable color output --no-text Don't display test (only PEM) --skew int Days to check for expiration (default 90) --skip-tls-validation Skip TLS certificate validation","title":"Usage"},{"location":"cli/fetch_jwk/#filters","text":"You can use one or more filters to restrict which JSON Web Key to display.","title":"Filters"},{"location":"cli/fetch_jwk/#-alg-string","text":"Only display JSON Web Key matching the algorithm specified.","title":"--alg string"},{"location":"cli/fetch_jwk/#-kid-string","text":"Only display JSON Web Key matching the KeyID specified.","title":"--kid string"},{"location":"cli/fetch_jwk/#-kty-string","text":"Only display JSON Web Key matching the KeyType specified.","title":"--kty string"},{"location":"cli/fetch_saml/","text":"Fetch SAML \u00b6 Fetch SAML Metadata from remote endpoint, parse and extract X509 Certificate from the XML content. Usage \u00b6 cert-monitor fetch saml Error: required flag(s) \"metadata-url\" not set Usage: cert-monitor fetch saml [flags] Examples: cert-monitor fetch saml -m https://iamapps-public.belgium.be/saml/fas-metadata.xml Flags: -h, --help help for saml -m, --metadata-url string SAML metadata url Global Flags: -d, --debug debug mode enabled -i, --index int Index from certificate list (default -1) --no-color Disable color output --no-text Don't display test (only PEM) --skew int Days to check for expiration (default 90) --skip-tls-validation Skip TLS certificate validation required flag(s) \"metadata-url\" not set","title":"Fetch SAML"},{"location":"cli/fetch_saml/#fetch-saml","text":"Fetch SAML Metadata from remote endpoint, parse and extract X509 Certificate from the XML content.","title":"Fetch SAML"},{"location":"cli/fetch_saml/#usage","text":"cert-monitor fetch saml Error: required flag(s) \"metadata-url\" not set Usage: cert-monitor fetch saml [flags] Examples: cert-monitor fetch saml -m https://iamapps-public.belgium.be/saml/fas-metadata.xml Flags: -h, --help help for saml -m, --metadata-url string SAML metadata url Global Flags: -d, --debug debug mode enabled -i, --index int Index from certificate list (default -1) --no-color Disable color output --no-text Don't display test (only PEM) --skew int Days to check for expiration (default 90) --skip-tls-validation Skip TLS certificate validation required flag(s) \"metadata-url\" not set","title":"Usage"},{"location":"cli/fetch_tcp/","text":"Fetch TCP \u00b6 Fetch the TLS certificate chain exposed on remote endpoint not using HTTPS. Tip Typically, use the fetch tcp for LDAPS or other protocols built on top of TLS. Usage \u00b6 cert-monitor fetch tcp Error: required flag(s) \"address\", \"port\" not set Usage: cert-monitor fetch tcp [flags] Examples: cert-monitor fetch tcp --address google.com --port 443 Flags: -a, --address string Remote host address -h, --help help for tcp -p, --port int Remote host port --sni string TLS Server Name Identifier Global Flags: -d, --debug debug mode enabled -i, --index int Index from certificate list (default -1) --no-color Disable color output --no-text Don't display test (only PEM) --skew int Days to check for expiration (default 90) --skip-tls-validation Skip TLS certificate validation required flag(s) \"address\", \"port\" not set","title":"Fetch TCP"},{"location":"cli/fetch_tcp/#fetch-tcp","text":"Fetch the TLS certificate chain exposed on remote endpoint not using HTTPS. Tip Typically, use the fetch tcp for LDAPS or other protocols built on top of TLS.","title":"Fetch TCP"},{"location":"cli/fetch_tcp/#usage","text":"cert-monitor fetch tcp Error: required flag(s) \"address\", \"port\" not set Usage: cert-monitor fetch tcp [flags] Examples: cert-monitor fetch tcp --address google.com --port 443 Flags: -a, --address string Remote host address -h, --help help for tcp -p, --port int Remote host port --sni string TLS Server Name Identifier Global Flags: -d, --debug debug mode enabled -i, --index int Index from certificate list (default -1) --no-color Disable color output --no-text Don't display test (only PEM) --skew int Days to check for expiration (default 90) --skip-tls-validation Skip TLS certificate validation required flag(s) \"address\", \"port\" not set","title":"Usage"},{"location":"cli/fetch_tls/","text":"Fetch TLS (HTTPS) \u00b6 Fetch the TLS certificate chain exposed on remote endpoint using cert-monitor fetch tls --url [URL] . Usage \u00b6 cert-monitor fetch tls Error: required flag(s) \"url\" not set Usage: cert-monitor fetch tls [flags] Examples: cert-monitor fetch tls --url https://google.com Flags: -h, --help help for tls --sni string TLS Server Name Identifier -u, --url string remote TLS endpoint Global Flags: -d, --debug debug mode enabled -i, --index int Index from certificate list (default -1) --no-color Disable color output --no-text Don't display test (only PEM) --skew int Days to check for expiration (default 90) --skip-tls-validation Skip TLS certificate validation required flag(s) \"url\" not set --sni string \u00b6 Optionally, you can specify a Server Name Indicator using --sni string : Example: default cert-monitor fetch tls --url https://idp.iamfas.belgium.be/ --index 0 2022-01-16T16:04:31.915+0100 [INFO] cert-monitor: X509 Certificate: index=0 Subject=\"CN=idp.iamfas.belgium.be,O=Federale Overheidsdienst Beleid en Ondersteuning,L=BRUSSEL,C=BE\" 2022-01-16T16:04:31.915+0100 [INFO] cert-monitor: X509 Certificate: index=0 Issuer=\"CN=GEANT OV RSA CA 4,O=GEANT Vereniging,C=NL\" 2022-01-16T16:04:31.915+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotBefore=\"2021-09-17 00:00:00 +0000 UTC\" 2022-01-16T16:04:31.915+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotAfter=\"2022-09-17 23:59:59 +0000 UTC\" 2022-01-16T16:04:31.915+0100 [INFO] cert-monitor: X509 Certificate: index=0 -----BEGIN CERTIFICATE----- MIIHcjCCBVqgAwIBAgIRANtvSR/N24RkUXflQCUxPKkwDQYJKoZIhvcNAQEMBQAw RDELMAkGA1UEBhMCTkwxGTAXBgNVBAoTEEdFQU5UIFZlcmVuaWdpbmcxGjAYBgNV BAMTEUdFQU5UIE9WIFJTQSBDQSA0MB4XDTIxMDkxNzAwMDAwMFoXDTIyMDkxNzIz NTk1OVowejELMAkGA1UEBhMCQkUxEDAOBgNVBAcTB0JSVVNTRUwxOTA3BgNVBAoT MEZlZGVyYWxlIE92ZXJoZWlkc2RpZW5zdCBCZWxlaWQgZW4gT25kZXJzdGV1bmlu ZzEeMBwGA1UEAxMVaWRwLmlhbWZhcy5iZWxnaXVtLmJlMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAwT0fn/QXRrabgJt3tD5UKrRl4PSdcxudkTRc/uqE EVWThbaR6tz9LJ67cAcZA3DhtcfEYMiLPc2+uKzbMvdYC/1kKN17VkSdwrpJBq5/ hWOsjzpl4elCXu89xvVpLoDc0RIo6f84hU1qLbIsuAvOL4HDwsEyxa/geSbSplc6 ubI2zquR2sgXYccD/WL//oTLHm8mM3HsMOY4EOtOOAv41CTy5JTHL8U7B1gIKdgs IhakD/y68KSLofjnLh2OcElcjftb0uSmufoMM290iRInWMAGJj0gYlz8pV2LGQnL eMyJ8sQAAnue+omu5JUtlWIEa/aZsNtY5vRhBq/dv9BqOwIDAQABo4IDJzCCAyMw HwYDVR0jBBgwFoAUbx01SRBsMvpZoJ68iugflb5xegwwHQYDVR0OBBYEFMQizTIG avbiNNKdar9E1uaPn1y1MA4GA1UdDwEB/wQEAwIFoDAMBgNVHRMBAf8EAjAAMB0G A1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjBJBgNVHSAEQjBAMDQGCysGAQQB sjEBAgJPMCUwIwYIKwYBBQUHAgEWF2h0dHBzOi8vc2VjdGlnby5jb20vQ1BTMAgG BmeBDAECAjA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vR0VBTlQuY3JsLnNlY3Rp Z28uY29tL0dFQU5UT1ZSU0FDQTQuY3JsMHUGCCsGAQUFBwEBBGkwZzA6BggrBgEF BQcwAoYuaHR0cDovL0dFQU5ULmNydC5zZWN0aWdvLmNvbS9HRUFOVE9WUlNBQ0E0 LmNydDApBggrBgEFBQcwAYYdaHR0cDovL0dFQU5ULm9jc3Auc2VjdGlnby5jb20w ggF9BgorBgEEAdZ5AgQCBIIBbQSCAWkBZwB2AEalVet1+pEgMLWiiWn0830RLEF0 vv1JuIWr8vxw/m1HAAABe/KdiIgAAAQDAEcwRQIgDDKlAXkEAiGiX5s9Wh6F9DxQ vYe6BBwrT3oG1hjxgpgCIQCYJrY2RoaHeXAJHR7XO4SHy8Nj4UNloGjcJAtvCk4A CwB1AEHIyrHfIkZKEMahOglCh15OMYsbA+vrS8do8JBilgb2AAABe/KdiFsAAAQD AEYwRAIgLFgVZZcKZYZX6YSSMBqUHBOh/wioHwiIAQMilGbR/1sCIFTVymlhu0Xg H5edx0DztaHpr8X1xToohgheHt+woJWzAHYAKXm+8J45OSHwVnOfY6V35b5XfZxg Cvj5TV0mXCVdx4QAAAF78p2ILQAABAMARzBFAiEAhQx+AA0TZkh+vdZCq65RV4WA jpMIZ+Roif+T6i7wvJ8CIG2AhlmF1PuN9G9icueyrI3L/Rj6Q0tFXh+a9nq9SA2K MCAGA1UdEQQZMBeCFWlkcC5pYW1mYXMuYmVsZ2l1bS5iZTANBgkqhkiG9w0BAQwF AAOCAgEAAInPj5QBiMVGfN2637JiK7YQILAP14KXDwjldAwaVch7ahitj0SPLGlI foGjYy0KYlaPZMH+ppLL30TTpmczAVY8s/Jz3MxkTv805Lwgy6YyNkpeCY5IcfAz 4sSuOxXl/KfDuqeIVGYFieO4EbkZGk0ZXqbWnYIyJXu/l5e9borgWxK1/a5lO9PE O/8yB4JDn7OzpgqFKUzT/EDhFqFuq5OW52OaA1TRBlDykZDR/ifzmAemgMPHXVrL Bdg19FzxbQCP3EkYEnU9xLb09blOPFiP9rCoK7y3KgFX6XfvRNKaOu9XlDVnIBuG l6kLndnLbjJqt5qkF2+m81FspHdWVtyuhsVY5KA3A3Ajp/2VJ1hZmVqE0luxWrNV hFykUreQ8mWEvs7f6MoNwUJ84cBS4RGXx+VK6d3+/icbD3xMtYE1xu0qzev4WmzR vrnQwPOpvTiQa30bdTLwfX7cFIdxxylEU0LlNyYjrjpoozGxqiwc6Q9eZxQn5mdm IdDRXDBiX4PRcyYdMCA1bXrKmivVJ82RF+Josd1Kc5yrcOHQ03vNVG3gYo5/Tt9k 53ofP84lmC9q6lXcxfx+55tUqJwpF/wZINbXngjxxCGk57J6b9SvXtzjC2K6cRlM Whz8mvWXyplKJu+raza9l+J6xQ0Y1ni+KqcklQ0qpHJTVM2hXqw= -----END CERTIFICATE----- Specifying --sni \"*.iamfas.belgium.be\" cert-monitor fetch tls --url https://idp.iamfas.belgium.be/ --index 0 --sni \"*.iamfas.belgium.be\" 2022-01-16T16:04:41.997+0100 [INFO] cert-monitor: X509 Certificate: index=0 Subject=\"CN=*.iamfas.belgium.be,O=Federale Overheidsdienst Beleid en Ondersteuning,L=BRUSSEL,C=BE\" 2022-01-16T16:04:41.997+0100 [INFO] cert-monitor: X509 Certificate: index=0 Issuer=\"CN=GEANT OV RSA CA 4,O=GEANT Vereniging,C=NL\" 2022-01-16T16:04:41.997+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotBefore=\"2021-04-26 00:00:00 +0000 UTC\" 2022-01-16T16:04:41.997+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotAfter=\"2022-04-26 23:59:59 +0000 UTC\" 2022-01-16T16:04:41.997+0100 [INFO] cert-monitor: X509 Certificate: index=0 -----BEGIN CERTIFICATE----- MIIHgDCCBWigAwIBAgIQA1GD0+6qSr600cFp68H79zANBgkqhkiG9w0BAQwFADBE MQswCQYDVQQGEwJOTDEZMBcGA1UEChMQR0VBTlQgVmVyZW5pZ2luZzEaMBgGA1UE AxMRR0VBTlQgT1YgUlNBIENBIDQwHhcNMjEwNDI2MDAwMDAwWhcNMjIwNDI2MjM1 OTU5WjB4MQswCQYDVQQGEwJCRTEQMA4GA1UEBxMHQlJVU1NFTDE5MDcGA1UEChMw RmVkZXJhbGUgT3ZlcmhlaWRzZGllbnN0IEJlbGVpZCBlbiBPbmRlcnN0ZXVuaW5n MRwwGgYDVQQDDBMqLmlhbWZhcy5iZWxnaXVtLmJlMIIBIjANBgkqhkiG9w0BAQEF AAOCAQ8AMIIBCgKCAQEAripD+Q4cuG7TEoGWwh8stMWThKqLfeyiS/w07IMfJPdV Him3Rx7ATQamnOWLbrlM3l4N36GpTGRnVH206Fi710ykCrO3ixAGr9ohFvgs4fGA o1JGrO7ZffhwzbbrPXG3XUzVDWr7M09/SVLVPz2neRQRM1TxBF/FIHr7ns6TLJy+ wajVw81nefwNJenMO1iEUoeSk0h7OvExh/Gi/iS5kLqdfvF8rYr0FhVd4Pjpi0je g7dEuOSs2t7wLN8hXG36qsI2mtoRedDblgc3bEuGWeLHqcbeGf31S/VQbr2wYwHg j3rE0wTulgCZJY+VO54/b6yTb7+ZvNQ1vwGaZ7wdywIDAQABo4IDODCCAzQwHwYD VR0jBBgwFoAUbx01SRBsMvpZoJ68iugflb5xegwwHQYDVR0OBBYEFCV/u+hbrjYF qjV2jCOXxj4jzRdOMA4GA1UdDwEB/wQEAwIFoDAMBgNVHRMBAf8EAjAAMB0GA1Ud JQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjBJBgNVHSAEQjBAMDQGCysGAQQBsjEB AgJPMCUwIwYIKwYBBQUHAgEWF2h0dHBzOi8vc2VjdGlnby5jb20vQ1BTMAgGBmeB DAECAjA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vR0VBTlQuY3JsLnNlY3RpZ28u Y29tL0dFQU5UT1ZSU0FDQTQuY3JsMHUGCCsGAQUFBwEBBGkwZzA6BggrBgEFBQcw AoYuaHR0cDovL0dFQU5ULmNydC5zZWN0aWdvLmNvbS9HRUFOVE9WUlNBQ0E0LmNy dDApBggrBgEFBQcwAYYdaHR0cDovL0dFQU5ULm9jc3Auc2VjdGlnby5jb20wMQYD VR0RBCowKIITKi5pYW1mYXMuYmVsZ2l1bS5iZYIRaWFtZmFzLmJlbGdpdW0uYmUw ggF9BgorBgEEAdZ5AgQCBIIBbQSCAWkBZwB2AEalVet1+pEgMLWiiWn0830RLEF0 vv1JuIWr8vxw/m1HAAABeQ0UgjAAAAQDAEcwRQIhAJqglT+VzPM1maTHNEw8U+6J qxzs/zTYhgf7l1vBAg+AAiB4kROthSGu/boTsPyfWTlJB2dAhw29Yg3TjkUGrXVG zAB1AN+lXqtogk8fbK3uuF9OPlrqzaISpGpejjsSwCBEXCpzAAABeQ0UghIAAAQD AEYwRAIgAPdT8iDCz2PnetB1m9q+1uZDuaBN/TYqmrQlEqxp1koCIBYxrgmiWbWO QZq9E0NKJXmyhtRpklRYJHIfzX6AMU10AHYAVYHUwhaQNgFK6gubVzxT8MDkOHhw JQgXL6OqHQcT0wwAAAF5DRSCCwAABAMARzBFAiBKR+PTfYcM8gIQh7BpYj2Hqjh5 wymZe0lpRWVoTfDHDwIhAN2CGGcNzeJ0zE6MvSFy10g01qpjmmprMPxgQ/GL83li MA0GCSqGSIb3DQEBDAUAA4ICAQBItqim3c6+YUx+TpWk4VZuqLBBF03sbFyBIRap +FEb1bkE23Lfo6U9I3xn+JwFi/Ab0tmJHU9wNguK5pWXtWVxgmdrTkFb2QGrdi2o rCwyXtRWIIIIxg0G/q8MqxK+frnAmzBsla2lFFzFv6Dk56SJkxcEsWrz+/HP3o6v 6y1C5YalRuOBmOvTgwZ3WKLpFnXneKqSqnMXtPrrSPujHtmgJ5rGuWRP1INVf0K7 uw6nIEfOW37cQaKNHZE1EDUF/RJAjSLDYFawU2JQ6yERc/XR8Ywe1G3opxANirWA gl9/IqOq6aCGiEDGsAjyH6rp/t4qp37vgZh9vEMZ+U6chu86UoNUbBa6Y9MP1+mv 5ma9ApqwWaItU80jsnmCxYvhP20bUDdpkyrnaRpRadFWMmi65pRoQcxwqbiJFSO5 NT7auXIi6HY6zLVFBexbR4HzaNJHQnxo4fINfh9N2IIbT5mPlWEr2hqwPhC5KDpo p/e+yX/DLDipZY0vdUlyxhKllvgVv1v3q9/WXo1zhmEWC3TnaUDx+6auNZ+g4Gxj oeBs7KahM3SRL7Xgc5Uw4qa8QN92XbnLOLhD7Ahfo4v5tOf/g8uidRbo7OyruW6r l3kmxERpydz+ICxQzqKEfF8R6iYNWKdwhbl/611nEvLXIQBlAfjex63IsmjTOWcj emHYqw== -----END CERTIFICATE-----","title":"Fetch TLS (HTTPS)"},{"location":"cli/fetch_tls/#fetch-tls-https","text":"Fetch the TLS certificate chain exposed on remote endpoint using cert-monitor fetch tls --url [URL] .","title":"Fetch TLS (HTTPS)"},{"location":"cli/fetch_tls/#usage","text":"cert-monitor fetch tls Error: required flag(s) \"url\" not set Usage: cert-monitor fetch tls [flags] Examples: cert-monitor fetch tls --url https://google.com Flags: -h, --help help for tls --sni string TLS Server Name Identifier -u, --url string remote TLS endpoint Global Flags: -d, --debug debug mode enabled -i, --index int Index from certificate list (default -1) --no-color Disable color output --no-text Don't display test (only PEM) --skew int Days to check for expiration (default 90) --skip-tls-validation Skip TLS certificate validation required flag(s) \"url\" not set","title":"Usage"},{"location":"cli/fetch_tls/#-sni-string","text":"Optionally, you can specify a Server Name Indicator using --sni string : Example: default cert-monitor fetch tls --url https://idp.iamfas.belgium.be/ --index 0 2022-01-16T16:04:31.915+0100 [INFO] cert-monitor: X509 Certificate: index=0 Subject=\"CN=idp.iamfas.belgium.be,O=Federale Overheidsdienst Beleid en Ondersteuning,L=BRUSSEL,C=BE\" 2022-01-16T16:04:31.915+0100 [INFO] cert-monitor: X509 Certificate: index=0 Issuer=\"CN=GEANT OV RSA CA 4,O=GEANT Vereniging,C=NL\" 2022-01-16T16:04:31.915+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotBefore=\"2021-09-17 00:00:00 +0000 UTC\" 2022-01-16T16:04:31.915+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotAfter=\"2022-09-17 23:59:59 +0000 UTC\" 2022-01-16T16:04:31.915+0100 [INFO] cert-monitor: X509 Certificate: index=0 -----BEGIN CERTIFICATE----- MIIHcjCCBVqgAwIBAgIRANtvSR/N24RkUXflQCUxPKkwDQYJKoZIhvcNAQEMBQAw RDELMAkGA1UEBhMCTkwxGTAXBgNVBAoTEEdFQU5UIFZlcmVuaWdpbmcxGjAYBgNV BAMTEUdFQU5UIE9WIFJTQSBDQSA0MB4XDTIxMDkxNzAwMDAwMFoXDTIyMDkxNzIz NTk1OVowejELMAkGA1UEBhMCQkUxEDAOBgNVBAcTB0JSVVNTRUwxOTA3BgNVBAoT MEZlZGVyYWxlIE92ZXJoZWlkc2RpZW5zdCBCZWxlaWQgZW4gT25kZXJzdGV1bmlu ZzEeMBwGA1UEAxMVaWRwLmlhbWZhcy5iZWxnaXVtLmJlMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAwT0fn/QXRrabgJt3tD5UKrRl4PSdcxudkTRc/uqE EVWThbaR6tz9LJ67cAcZA3DhtcfEYMiLPc2+uKzbMvdYC/1kKN17VkSdwrpJBq5/ hWOsjzpl4elCXu89xvVpLoDc0RIo6f84hU1qLbIsuAvOL4HDwsEyxa/geSbSplc6 ubI2zquR2sgXYccD/WL//oTLHm8mM3HsMOY4EOtOOAv41CTy5JTHL8U7B1gIKdgs IhakD/y68KSLofjnLh2OcElcjftb0uSmufoMM290iRInWMAGJj0gYlz8pV2LGQnL eMyJ8sQAAnue+omu5JUtlWIEa/aZsNtY5vRhBq/dv9BqOwIDAQABo4IDJzCCAyMw HwYDVR0jBBgwFoAUbx01SRBsMvpZoJ68iugflb5xegwwHQYDVR0OBBYEFMQizTIG avbiNNKdar9E1uaPn1y1MA4GA1UdDwEB/wQEAwIFoDAMBgNVHRMBAf8EAjAAMB0G A1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjBJBgNVHSAEQjBAMDQGCysGAQQB sjEBAgJPMCUwIwYIKwYBBQUHAgEWF2h0dHBzOi8vc2VjdGlnby5jb20vQ1BTMAgG BmeBDAECAjA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vR0VBTlQuY3JsLnNlY3Rp Z28uY29tL0dFQU5UT1ZSU0FDQTQuY3JsMHUGCCsGAQUFBwEBBGkwZzA6BggrBgEF BQcwAoYuaHR0cDovL0dFQU5ULmNydC5zZWN0aWdvLmNvbS9HRUFOVE9WUlNBQ0E0 LmNydDApBggrBgEFBQcwAYYdaHR0cDovL0dFQU5ULm9jc3Auc2VjdGlnby5jb20w ggF9BgorBgEEAdZ5AgQCBIIBbQSCAWkBZwB2AEalVet1+pEgMLWiiWn0830RLEF0 vv1JuIWr8vxw/m1HAAABe/KdiIgAAAQDAEcwRQIgDDKlAXkEAiGiX5s9Wh6F9DxQ vYe6BBwrT3oG1hjxgpgCIQCYJrY2RoaHeXAJHR7XO4SHy8Nj4UNloGjcJAtvCk4A CwB1AEHIyrHfIkZKEMahOglCh15OMYsbA+vrS8do8JBilgb2AAABe/KdiFsAAAQD AEYwRAIgLFgVZZcKZYZX6YSSMBqUHBOh/wioHwiIAQMilGbR/1sCIFTVymlhu0Xg H5edx0DztaHpr8X1xToohgheHt+woJWzAHYAKXm+8J45OSHwVnOfY6V35b5XfZxg Cvj5TV0mXCVdx4QAAAF78p2ILQAABAMARzBFAiEAhQx+AA0TZkh+vdZCq65RV4WA jpMIZ+Roif+T6i7wvJ8CIG2AhlmF1PuN9G9icueyrI3L/Rj6Q0tFXh+a9nq9SA2K MCAGA1UdEQQZMBeCFWlkcC5pYW1mYXMuYmVsZ2l1bS5iZTANBgkqhkiG9w0BAQwF AAOCAgEAAInPj5QBiMVGfN2637JiK7YQILAP14KXDwjldAwaVch7ahitj0SPLGlI foGjYy0KYlaPZMH+ppLL30TTpmczAVY8s/Jz3MxkTv805Lwgy6YyNkpeCY5IcfAz 4sSuOxXl/KfDuqeIVGYFieO4EbkZGk0ZXqbWnYIyJXu/l5e9borgWxK1/a5lO9PE O/8yB4JDn7OzpgqFKUzT/EDhFqFuq5OW52OaA1TRBlDykZDR/ifzmAemgMPHXVrL Bdg19FzxbQCP3EkYEnU9xLb09blOPFiP9rCoK7y3KgFX6XfvRNKaOu9XlDVnIBuG l6kLndnLbjJqt5qkF2+m81FspHdWVtyuhsVY5KA3A3Ajp/2VJ1hZmVqE0luxWrNV hFykUreQ8mWEvs7f6MoNwUJ84cBS4RGXx+VK6d3+/icbD3xMtYE1xu0qzev4WmzR vrnQwPOpvTiQa30bdTLwfX7cFIdxxylEU0LlNyYjrjpoozGxqiwc6Q9eZxQn5mdm IdDRXDBiX4PRcyYdMCA1bXrKmivVJ82RF+Josd1Kc5yrcOHQ03vNVG3gYo5/Tt9k 53ofP84lmC9q6lXcxfx+55tUqJwpF/wZINbXngjxxCGk57J6b9SvXtzjC2K6cRlM Whz8mvWXyplKJu+raza9l+J6xQ0Y1ni+KqcklQ0qpHJTVM2hXqw= -----END CERTIFICATE----- Specifying --sni \"*.iamfas.belgium.be\" cert-monitor fetch tls --url https://idp.iamfas.belgium.be/ --index 0 --sni \"*.iamfas.belgium.be\" 2022-01-16T16:04:41.997+0100 [INFO] cert-monitor: X509 Certificate: index=0 Subject=\"CN=*.iamfas.belgium.be,O=Federale Overheidsdienst Beleid en Ondersteuning,L=BRUSSEL,C=BE\" 2022-01-16T16:04:41.997+0100 [INFO] cert-monitor: X509 Certificate: index=0 Issuer=\"CN=GEANT OV RSA CA 4,O=GEANT Vereniging,C=NL\" 2022-01-16T16:04:41.997+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotBefore=\"2021-04-26 00:00:00 +0000 UTC\" 2022-01-16T16:04:41.997+0100 [INFO] cert-monitor: X509 Certificate: index=0 NotAfter=\"2022-04-26 23:59:59 +0000 UTC\" 2022-01-16T16:04:41.997+0100 [INFO] cert-monitor: X509 Certificate: index=0 -----BEGIN CERTIFICATE----- MIIHgDCCBWigAwIBAgIQA1GD0+6qSr600cFp68H79zANBgkqhkiG9w0BAQwFADBE MQswCQYDVQQGEwJOTDEZMBcGA1UEChMQR0VBTlQgVmVyZW5pZ2luZzEaMBgGA1UE AxMRR0VBTlQgT1YgUlNBIENBIDQwHhcNMjEwNDI2MDAwMDAwWhcNMjIwNDI2MjM1 OTU5WjB4MQswCQYDVQQGEwJCRTEQMA4GA1UEBxMHQlJVU1NFTDE5MDcGA1UEChMw RmVkZXJhbGUgT3ZlcmhlaWRzZGllbnN0IEJlbGVpZCBlbiBPbmRlcnN0ZXVuaW5n MRwwGgYDVQQDDBMqLmlhbWZhcy5iZWxnaXVtLmJlMIIBIjANBgkqhkiG9w0BAQEF AAOCAQ8AMIIBCgKCAQEAripD+Q4cuG7TEoGWwh8stMWThKqLfeyiS/w07IMfJPdV Him3Rx7ATQamnOWLbrlM3l4N36GpTGRnVH206Fi710ykCrO3ixAGr9ohFvgs4fGA o1JGrO7ZffhwzbbrPXG3XUzVDWr7M09/SVLVPz2neRQRM1TxBF/FIHr7ns6TLJy+ wajVw81nefwNJenMO1iEUoeSk0h7OvExh/Gi/iS5kLqdfvF8rYr0FhVd4Pjpi0je g7dEuOSs2t7wLN8hXG36qsI2mtoRedDblgc3bEuGWeLHqcbeGf31S/VQbr2wYwHg j3rE0wTulgCZJY+VO54/b6yTb7+ZvNQ1vwGaZ7wdywIDAQABo4IDODCCAzQwHwYD VR0jBBgwFoAUbx01SRBsMvpZoJ68iugflb5xegwwHQYDVR0OBBYEFCV/u+hbrjYF qjV2jCOXxj4jzRdOMA4GA1UdDwEB/wQEAwIFoDAMBgNVHRMBAf8EAjAAMB0GA1Ud JQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjBJBgNVHSAEQjBAMDQGCysGAQQBsjEB AgJPMCUwIwYIKwYBBQUHAgEWF2h0dHBzOi8vc2VjdGlnby5jb20vQ1BTMAgGBmeB DAECAjA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vR0VBTlQuY3JsLnNlY3RpZ28u Y29tL0dFQU5UT1ZSU0FDQTQuY3JsMHUGCCsGAQUFBwEBBGkwZzA6BggrBgEFBQcw AoYuaHR0cDovL0dFQU5ULmNydC5zZWN0aWdvLmNvbS9HRUFOVE9WUlNBQ0E0LmNy dDApBggrBgEFBQcwAYYdaHR0cDovL0dFQU5ULm9jc3Auc2VjdGlnby5jb20wMQYD VR0RBCowKIITKi5pYW1mYXMuYmVsZ2l1bS5iZYIRaWFtZmFzLmJlbGdpdW0uYmUw ggF9BgorBgEEAdZ5AgQCBIIBbQSCAWkBZwB2AEalVet1+pEgMLWiiWn0830RLEF0 vv1JuIWr8vxw/m1HAAABeQ0UgjAAAAQDAEcwRQIhAJqglT+VzPM1maTHNEw8U+6J qxzs/zTYhgf7l1vBAg+AAiB4kROthSGu/boTsPyfWTlJB2dAhw29Yg3TjkUGrXVG zAB1AN+lXqtogk8fbK3uuF9OPlrqzaISpGpejjsSwCBEXCpzAAABeQ0UghIAAAQD AEYwRAIgAPdT8iDCz2PnetB1m9q+1uZDuaBN/TYqmrQlEqxp1koCIBYxrgmiWbWO QZq9E0NKJXmyhtRpklRYJHIfzX6AMU10AHYAVYHUwhaQNgFK6gubVzxT8MDkOHhw JQgXL6OqHQcT0wwAAAF5DRSCCwAABAMARzBFAiBKR+PTfYcM8gIQh7BpYj2Hqjh5 wymZe0lpRWVoTfDHDwIhAN2CGGcNzeJ0zE6MvSFy10g01qpjmmprMPxgQ/GL83li MA0GCSqGSIb3DQEBDAUAA4ICAQBItqim3c6+YUx+TpWk4VZuqLBBF03sbFyBIRap +FEb1bkE23Lfo6U9I3xn+JwFi/Ab0tmJHU9wNguK5pWXtWVxgmdrTkFb2QGrdi2o rCwyXtRWIIIIxg0G/q8MqxK+frnAmzBsla2lFFzFv6Dk56SJkxcEsWrz+/HP3o6v 6y1C5YalRuOBmOvTgwZ3WKLpFnXneKqSqnMXtPrrSPujHtmgJ5rGuWRP1INVf0K7 uw6nIEfOW37cQaKNHZE1EDUF/RJAjSLDYFawU2JQ6yERc/XR8Ywe1G3opxANirWA gl9/IqOq6aCGiEDGsAjyH6rp/t4qp37vgZh9vEMZ+U6chu86UoNUbBa6Y9MP1+mv 5ma9ApqwWaItU80jsnmCxYvhP20bUDdpkyrnaRpRadFWMmi65pRoQcxwqbiJFSO5 NT7auXIi6HY6zLVFBexbR4HzaNJHQnxo4fINfh9N2IIbT5mPlWEr2hqwPhC5KDpo p/e+yX/DLDipZY0vdUlyxhKllvgVv1v3q9/WXo1zhmEWC3TnaUDx+6auNZ+g4Gxj oeBs7KahM3SRL7Xgc5Uw4qa8QN92XbnLOLhD7Ahfo4v5tOf/g8uidRbo7OyruW6r l3kmxERpydz+ICxQzqKEfF8R6iYNWKdwhbl/611nEvLXIQBlAfjex63IsmjTOWcj emHYqw== -----END CERTIFICATE-----","title":"--sni string"},{"location":"contributing/contributing/","text":"Contributing \u00b6 Look at CONTRIBUTING.md at the root of the Github repo .","title":"Contributing"},{"location":"contributing/contributing/#contributing","text":"Look at CONTRIBUTING.md at the root of the Github repo .","title":"Contributing"},{"location":"contributing/git/","text":"Git \u00b6 Commit Pattern \u00b6 Commit message template: <type>: <subject> <BLANK LINE> <body> <BLANK LINE> <footer> Use the following type for your commit messages: docs: for commit related to documentation change feat: for commit related to a new feature, also add a reference to the Github issue in the subject fix: for commit related to a bug fix, also add a reference to the Github issue in the subject Use the following type for commits that should not appear in changelog or release note uses: test: for test typo: for fixing typo ignore: for everything else Breaking Change or Note \u00b6 Mention BREAKING CHANGE: or NOTE: in the footer . Use rebase before submitting Pull Request \u00b6 Make sure to rebase you commits (on your feature branch) first so that the git log follows the patterns mentioned above. git rebase -i","title":"Git"},{"location":"contributing/git/#git","text":"","title":"Git"},{"location":"contributing/git/#commit-pattern","text":"Commit message template: <type>: <subject> <BLANK LINE> <body> <BLANK LINE> <footer> Use the following type for your commit messages: docs: for commit related to documentation change feat: for commit related to a new feature, also add a reference to the Github issue in the subject fix: for commit related to a bug fix, also add a reference to the Github issue in the subject Use the following type for commits that should not appear in changelog or release note uses: test: for test typo: for fixing typo ignore: for everything else","title":"Commit Pattern"},{"location":"contributing/git/#breaking-change-or-note","text":"Mention BREAKING CHANGE: or NOTE: in the footer .","title":"Breaking Change or Note"},{"location":"contributing/git/#use-rebase-before-submitting-pull-request","text":"Make sure to rebase you commits (on your feature branch) first so that the git log follows the patterns mentioned above. git rebase -i","title":"Use rebase before submitting Pull Request"},{"location":"contributing/tooling/","text":"Tooling \u00b6 Release: goreleaser \u00b6 Goreleaser is used for building, packaging, and releasing new version of the software. Info See section \"Git\" for more details about git commit message Making Local Snapshot Build \u00b6 make build-snapshot Or goreleaser build --rm-dist --snapshot --single-target Testing Pre-release \u00b6 make release-skip-publish Or goreleaser release --rm-dist --skip-publish Vulnerability Scanning \u00b6 nancy is used for dependency scanning. make scan Linting \u00b6 golangci-lint is used for code linting. make lint Changelog Generator \u00b6 git-chglog is used for Changelog generation make changelog Info See section \"Git\" for more details about git commit message Documentation \u00b6 MkDocs is used for generating the documentation.","title":"Tooling"},{"location":"contributing/tooling/#tooling","text":"","title":"Tooling"},{"location":"contributing/tooling/#release-goreleaser","text":"Goreleaser is used for building, packaging, and releasing new version of the software. Info See section \"Git\" for more details about git commit message","title":"Release: goreleaser"},{"location":"contributing/tooling/#making-local-snapshot-build","text":"make build-snapshot Or goreleaser build --rm-dist --snapshot --single-target","title":"Making Local Snapshot Build"},{"location":"contributing/tooling/#testing-pre-release","text":"make release-skip-publish Or goreleaser release --rm-dist --skip-publish","title":"Testing Pre-release"},{"location":"contributing/tooling/#vulnerability-scanning","text":"nancy is used for dependency scanning. make scan","title":"Vulnerability Scanning"},{"location":"contributing/tooling/#linting","text":"golangci-lint is used for code linting. make lint","title":"Linting"},{"location":"contributing/tooling/#changelog-generator","text":"git-chglog is used for Changelog generation make changelog Info See section \"Git\" for more details about git commit message","title":"Changelog Generator"},{"location":"contributing/tooling/#documentation","text":"MkDocs is used for generating the documentation.","title":"Documentation"}]}